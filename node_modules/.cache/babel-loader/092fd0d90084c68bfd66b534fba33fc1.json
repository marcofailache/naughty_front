{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/LoveFarms/components/FarmCard/FarmCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport styled, { keyframes } from 'styled-components';\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport ExpandableSectionButton from 'components/ExpandableSectionButton';\nimport { QuoteToken } from 'config/constants/types';\nimport DetailsSection from './DetailsSection';\nimport CardHeading from './CardHeading';\nimport CardActionsContainer from './CardActionsContainer';\nimport ApyButton from './ApyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`;\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(45deg,\n  rgba(255, 0, 0, 1) 0%,\n  rgba(255, 154, 0, 1) 10%,\n  rgba(208, 222, 33, 1) 20%,\n  rgba(79, 220, 74, 1) 30%,\n  rgba(63, 218, 216, 1) 40%,\n  rgba(47, 201, 226, 1) 50%,\n  rgba(28, 127, 238, 1) 60%,\n  rgba(95, 21, 242, 1) 70%,\n  rgba(186, 12, 248, 1) 80%,\n  rgba(251, 7, 217, 1) 90%,\n  rgba(255, 0, 0, 1) 100%);\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`;\n_c = StyledCardAccent;\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${props => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`;\n_c2 = FCard;\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`;\n_c3 = Divider;\nconst ExpandingWrapper = styled.div`\n  height: ${props => props.expanded ? '100%' : '0px'};\n  overflow: hidden;\n`;\n_c4 = ExpandingWrapper;\n\nconst FarmCard = ({\n  farm,\n  removed,\n  cakePrice,\n  bnbPrice,\n  ethereum,\n  account\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const [showExpandableSection, setShowExpandableSection] = useState(false); // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  //  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n\n  const farmImage = farm.lpSymbol.split(' ')[0].toLowerCase();\n  const totalValue = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null;\n    }\n\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken);\n    }\n\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken);\n    }\n\n    return farm.lpTotalInQuoteToken;\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol]);\n  const totalValueFormated = totalValue ? `$${Number(totalValue).toLocaleString(undefined, {\n    maximumFractionDigits: 0\n  })}` : '-';\n  const lpLabel = farm.lpSymbol;\n  const earnLabel = 'FLIX';\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n  const {\n    quoteTokenAdresses,\n    quoteTokenSymbol,\n    tokenAddresses,\n    risk\n  } = farm;\n  return /*#__PURE__*/_jsxDEV(FCard, {\n    children: [farm.tokenSymbol === 'FLIX' || /*#__PURE__*/_jsxDEV(StyledCardAccent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(CardHeading, {\n      lpLabel: lpLabel,\n      multiplier: farm.multiplier,\n      risk: risk,\n      depositFee: farm.depositFeeBP,\n      farmImage: farmImage,\n      tokenSymbol: farm.tokenSymbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), !removed && /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [TranslateString(352, 'APR'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: farm.apy ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ApyButton, {\n            lpLabel: lpLabel,\n            quoteTokenAdresses: quoteTokenAdresses,\n            quoteTokenSymbol: quoteTokenSymbol,\n            tokenAddresses: tokenAddresses,\n            cakePrice: cakePrice,\n            apy: farm.apy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), farmAPY, \"%\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 24,\n          width: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [TranslateString(318, 'Earn'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: earnLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: {\n          fontSize: '24px'\n        },\n        children: [TranslateString(10001, 'Deposit Fee'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        style: {\n          fontSize: '24px'\n        },\n        children: [farm.depositFeeBP / 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActionsContainer, {\n      farm: farm,\n      ethereum: ethereum,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandableSectionButton, {\n      onClick: () => setShowExpandableSection(!showExpandableSection),\n      expanded: showExpandableSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandingWrapper, {\n      expanded: showExpandableSection,\n      children: /*#__PURE__*/_jsxDEV(DetailsSection, {\n        removed: removed,\n        isTokenOnly: farm.isTokenOnly,\n        bscScanAddress: farm.isTokenOnly ? `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}` : `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`,\n        totalValueFormated: totalValueFormated,\n        lpLabel: lpLabel,\n        quoteTokenAdresses: quoteTokenAdresses,\n        quoteTokenSymbol: quoteTokenSymbol,\n        tokenAddresses: tokenAddresses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmCard, \"IaZlonpiELGn+kLAbNgoqJ9yBRo=\", false, function () {\n  return [useI18n];\n});\n\n_c5 = FarmCard;\nexport default FarmCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledCardAccent\");\n$RefreshReg$(_c2, \"FCard\");\n$RefreshReg$(_c3, \"Divider\");\n$RefreshReg$(_c4, \"ExpandingWrapper\");\n$RefreshReg$(_c5, \"FarmCard\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/LoveFarms/components/FarmCard/FarmCard.tsx"],"names":["React","useMemo","useState","BigNumber","styled","keyframes","Flex","Text","Skeleton","useI18n","ExpandableSectionButton","QuoteToken","DetailsSection","CardHeading","CardActionsContainer","ApyButton","RainbowLight","StyledCardAccent","div","FCard","props","theme","card","background","Divider","colors","borderColor","ExpandingWrapper","expanded","FarmCard","farm","removed","cakePrice","bnbPrice","ethereum","account","TranslateString","showExpandableSection","setShowExpandableSection","farmImage","lpSymbol","split","toLowerCase","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","BNB","times","CAKE","totalValueFormated","Number","toLocaleString","undefined","maximumFractionDigits","lpLabel","earnLabel","farmAPY","apy","toNumber","minimumFractionDigits","quoteTokenAdresses","tokenAddresses","risk","tokenSymbol","multiplier","depositFeeBP","display","alignItems","fontSize","isTokenOnly","process","env","REACT_APP_CHAIN_ID","lpAddresses"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(45deg,\n  rgba(255, 0, 0, 1) 0%,\n  rgba(255, 154, 0, 1) 10%,\n  rgba(208, 222, 33, 1) 20%,\n  rgba(79, 220, 74, 1) 30%,\n  rgba(63, 218, 216, 1) 40%,\n  rgba(47, 201, 226, 1) 50%,\n  rgba(28, 127, 238, 1) 60%,\n  rgba(95, 21, 242, 1) 70%,\n  rgba(186, 12, 248, 1) 80%,\n  rgba(251, 7, 217, 1) 90%,\n  rgba(255, 0, 0, 1) 100%);\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n //  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n  const farmImage = farm.lpSymbol.split(' ')[0].toLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = 'FLIX'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  })\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\n\n  return (\n    <FCard >\n      {farm.tokenSymbol === 'FLIX' || <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        risk={risk}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent='space-between' alignItems='center'>\n          <Text>{TranslateString(352, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  cakePrice={cakePrice}\n                  apy={farm.apy}\n                />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent='space-between'>\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          isTokenOnly={farm.isTokenOnly}\n          bscScanAddress={\n            farm.isTokenOnly ?\n              `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n              :\n              `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\n          }\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n"]},"metadata":{},"sourceType":"module"}