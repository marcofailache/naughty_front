{"ast":null,"code":"import _slicedToArray from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback,useState,useEffect}from'react';import{useWallet}from'@binance-chain/bsc-use-wallet';import{useLottery,useLotteryTicket}from'hooks/useContract';import{multiClaim,getMax,multiBuy}from'../utils/lotteryUtils';export var useMultiClaimLottery=function useMultiClaimLottery(){var _useWallet=useWallet(),account=_useWallet.account;var lotteryContract=useLottery();var lotteryTicketContract=useLotteryTicket();var handleClaim=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var txHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return multiClaim(lotteryContract,lotteryTicketContract,account);case 3:txHash=_context.sent;return _context.abrupt(\"return\",txHash);case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);})),[account,lotteryContract,lotteryTicketContract]);return{onMultiClaim:handleClaim};};export var useMultiBuyLottery=function useMultiBuyLottery(){var _useWallet2=useWallet(),account=_useWallet2.account;var lotteryContract=useLottery();var handleBuy=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount,numbers){var txHash;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return multiBuy(lotteryContract,amount,numbers,account);case 3:txHash=_context2.sent;return _context2.abrupt(\"return\",txHash);case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",false);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}(),[account,lotteryContract]);return{onMultiBuy:handleBuy};};export var useMaxNumber=function useMaxNumber(){var _useState=useState(5),_useState2=_slicedToArray(_useState,2),max=_useState2[0],setMax=_useState2[1];var lotteryContract=useLottery();var fetchMax=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var maxNumber;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return getMax(lotteryContract);case 2:maxNumber=_context3.sent;setMax(maxNumber);case 4:case\"end\":return _context3.stop();}}},_callee3);})),[lotteryContract]);useEffect(function(){if(lotteryContract){fetchMax();}},[lotteryContract,fetchMax]);return max;};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useBuyLottery.ts"],"names":["useCallback","useState","useEffect","useWallet","useLottery","useLotteryTicket","multiClaim","getMax","multiBuy","useMultiClaimLottery","account","lotteryContract","lotteryTicketContract","handleClaim","txHash","onMultiClaim","useMultiBuyLottery","handleBuy","amount","numbers","onMultiBuy","useMaxNumber","max","setMax","fetchMax","maxNumber"],"mappings":"+eAAA,OAASA,WAAT,CAAsBC,QAAtB,CAAgCC,SAAhC,KAAiD,OAAjD,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,mBAA7C,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,QAA7B,KAA6C,uBAA7C,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACxC,eAAoBN,SAAS,EAA7B,CAAQO,OAAR,YAAQA,OAAR,CACA,GAAMC,CAAAA,eAAe,CAAGP,UAAU,EAAlC,CACA,GAAMQ,CAAAA,qBAAqB,CAAGP,gBAAgB,EAA9C,CAEA,GAAMQ,CAAAA,WAAW,CAAGb,WAAW,sEAAC,oLAEPM,CAAAA,UAAU,CAACK,eAAD,CAAkBC,qBAAlB,CAAyCF,OAAzC,CAFH,QAEtBI,MAFsB,+CAGrBA,MAHqB,0FAKrB,KALqB,sEAAD,GAO5B,CAACJ,OAAD,CAAUC,eAAV,CAA2BC,qBAA3B,CAP4B,CAA/B,CASA,MAAO,CAAEG,YAAY,CAAEF,WAAhB,CAAP,CACD,CAfM,CAiBP,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,gBAAoBb,SAAS,EAA7B,CAAQO,OAAR,aAAQA,OAAR,CACA,GAAMC,CAAAA,eAAe,CAAGP,UAAU,EAAlC,CAEA,GAAMa,CAAAA,SAAS,CAAGjB,WAAW,2FAC3B,kBAAOkB,MAAP,CAAuBC,OAAvB,yKAEyBX,CAAAA,QAAQ,CAACG,eAAD,CAAkBO,MAAlB,CAA0BC,OAA1B,CAAmCT,OAAnC,CAFjC,QAEUI,MAFV,iDAGWA,MAHX,8FAKW,KALX,wEAD2B,oEAS3B,CAACJ,OAAD,CAAUC,eAAV,CAT2B,CAA7B,CAYA,MAAO,CAAES,UAAU,CAAEH,SAAd,CAAP,CACD,CAjBM,CAmBP,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAChC,cAAsBpB,QAAQ,CAAC,CAAD,CAA9B,wCAAOqB,GAAP,eAAYC,MAAZ,eACA,GAAMZ,CAAAA,eAAe,CAAGP,UAAU,EAAlC,CAEA,GAAMoB,CAAAA,QAAQ,CAAGxB,WAAW,sEAAC,6KACHO,CAAAA,MAAM,CAACI,eAAD,CADH,QACrBc,SADqB,gBAE3BF,MAAM,CAACE,SAAD,CAAN,CAF2B,wDAAD,GAGzB,CAACd,eAAD,CAHyB,CAA5B,CAKAT,SAAS,CAAC,UAAM,CACd,GAAIS,eAAJ,CAAqB,CACnBa,QAAQ,GACT,CACF,CAJQ,CAIN,CAACb,eAAD,CAAkBa,QAAlB,CAJM,CAAT,CAMA,MAAOF,CAAAA,GAAP,CACD,CAhBM","sourcesContent":["import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n"]},"metadata":{},"sourceType":"module"}