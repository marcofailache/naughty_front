{"ast":null,"code":"const MINUTE_IN_SECONDS = 60;\nconst HOUR_IN_SECONDS = 3600;\nconst DAY_IN_SECONDS = 86400;\nconst MONTH_IN_SECONDS = 2629800;\nconst YEAR_IN_SECONDS = 31557600;\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\n\nconst getTimePeriods = seconds => {\n  let delta = seconds;\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS);\n    delta -= timeLeft.years * YEAR_IN_SECONDS;\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS);\n    delta -= timeLeft.months * MONTH_IN_SECONDS;\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS);\n    delta -= timeLeft.days * DAY_IN_SECONDS;\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS);\n    delta -= timeLeft.hours * HOUR_IN_SECONDS;\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS);\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS;\n  }\n\n  timeLeft.seconds = delta;\n  return timeLeft;\n};\n\nexport default getTimePeriods;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getTimePeriods.ts"],"names":["MINUTE_IN_SECONDS","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,EAA1B;AACA,MAAMC,eAAe,GAAG,IAAxB;AACA,MAAMC,cAAc,GAAG,KAAvB;AACA,MAAMC,gBAAgB,GAAG,OAAzB;AACA,MAAMC,eAAe,GAAG,QAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAIC,OAAD,IAAqB;AAC1C,MAAIC,KAAK,GAAGD,OAAZ;AACA,QAAME,QAAQ,GAAG;AACfC,IAAAA,KAAK,EAAE,CADQ;AAEfC,IAAAA,MAAM,EAAE,CAFO;AAGfC,IAAAA,IAAI,EAAE,CAHS;AAIfC,IAAAA,KAAK,EAAE,CAJQ;AAKfC,IAAAA,OAAO,EAAE,CALM;AAMfP,IAAAA,OAAO,EAAE;AANM,GAAjB;;AASA,MAAIC,KAAK,IAAIH,eAAb,EAA8B;AAC5BI,IAAAA,QAAQ,CAACC,KAAT,GAAiBK,IAAI,CAACC,KAAL,CAAWR,KAAK,GAAGH,eAAnB,CAAjB;AACAG,IAAAA,KAAK,IAAIC,QAAQ,CAACC,KAAT,GAAiBL,eAA1B;AACD;;AAED,MAAIG,KAAK,IAAIJ,gBAAb,EAA+B;AAC7BK,IAAAA,QAAQ,CAACE,MAAT,GAAkBI,IAAI,CAACC,KAAL,CAAWR,KAAK,GAAGJ,gBAAnB,CAAlB;AACAI,IAAAA,KAAK,IAAIC,QAAQ,CAACE,MAAT,GAAkBP,gBAA3B;AACD;;AAED,MAAII,KAAK,IAAIL,cAAb,EAA6B;AAC3BM,IAAAA,QAAQ,CAACG,IAAT,GAAgBG,IAAI,CAACC,KAAL,CAAWR,KAAK,GAAGL,cAAnB,CAAhB;AACAK,IAAAA,KAAK,IAAIC,QAAQ,CAACG,IAAT,GAAgBT,cAAzB;AACD;;AAED,MAAIK,KAAK,IAAIN,eAAb,EAA8B;AAC5BO,IAAAA,QAAQ,CAACI,KAAT,GAAiBE,IAAI,CAACC,KAAL,CAAWR,KAAK,GAAGN,eAAnB,CAAjB;AACAM,IAAAA,KAAK,IAAIC,QAAQ,CAACI,KAAT,GAAiBX,eAA1B;AACD;;AAED,MAAIM,KAAK,IAAIP,iBAAb,EAAgC;AAC9BQ,IAAAA,QAAQ,CAACK,OAAT,GAAmBC,IAAI,CAACC,KAAL,CAAWR,KAAK,GAAGP,iBAAnB,CAAnB;AACAO,IAAAA,KAAK,IAAIC,QAAQ,CAACK,OAAT,GAAmBb,iBAA5B;AACD;;AAEDQ,EAAAA,QAAQ,CAACF,OAAT,GAAmBC,KAAnB;AAEA,SAAOC,QAAP;AACD,CAvCD;;AAyCA,eAAeH,cAAf","sourcesContent":["const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n"]},"metadata":{},"sourceType":"module"}