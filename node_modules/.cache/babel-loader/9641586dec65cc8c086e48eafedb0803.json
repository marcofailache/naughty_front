{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useContext,useCallback}from'react';import styled from'styled-components';import{Card,CardBody,Heading,Tag,Button,ChevronUpIcon,ChevronDownIcon,Text,CardFooter,useModal,LinkExternal}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import InfoRow from'../InfoRow';import Image from'../Image';import{NftProviderContext}from'../../contexts/NftProvider';import{getPancakeRabbitContract}from'../../utils/contracts';import ClaimNftModal from'../ClaimNftModal';import BurnNftModal from'../BurnNftModal';import TransferNftModal from'../TransferNftModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledLinkExternal=styled(LinkExternal)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  text-decoration: none;\\n  font-weight: normal;\\n  color: \",\";\\n  display: flex;\\n  align-items: center;\\n\\n  svg {\\n    padding-left: 4px;\\n    height: 18px;\\n    width: auto;\\n    fill: \",\";\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.text;},function(_ref2){var theme=_ref2.theme;return theme.colors.primary;});var Header=styled(InfoRow)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  min-height: 28px;\\n\"])));var DetailsButton=styled(Button).attrs({variant:'text',fullWidth:true})(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  height: auto;\\n  padding: 16px 24px;\\n\\n  &:hover:not(:disabled):not(:active) {\\n    background-color: transparent;\\n  }\\n\\n  &:focus:not(:active) {\\n    box-shadow: none;\\n  }\\n\"])));var InfoBlock=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  padding: 0 24px 24px;\\n\"])));var Value=styled(Text)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n\"])));var NftCard=function NftCard(_ref3){var nft=_ref3.nft;var _useState=useState({isLoading:false,isOpen:false,bunnyCount:0,bunnyBurnCount:0}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var TranslateString=useI18n();var _useContext=useContext(NftProviderContext),isInitialized=_useContext.isInitialized,canClaim=_useContext.canClaim,hasClaimed=_useContext.hasClaimed,canBurnNft=_useContext.canBurnNft,totalSupplyDistributed=_useContext.totalSupplyDistributed,currentDistributedSupply=_useContext.currentDistributedSupply,getTokenIds=_useContext.getTokenIds,reInitialize=_useContext.reInitialize;var walletCanClaim=canClaim&&!hasClaimed;var bunnyId=nft.bunnyId,name=nft.name,previewImage=nft.previewImage,originalImage=nft.originalImage,description=nft.description;var tokenIds=getTokenIds(bunnyId);var isSupplyAvailable=currentDistributedSupply<totalSupplyDistributed;var walletOwnsNft=tokenIds&&tokenIds.length>0;var Icon=state.isOpen?ChevronUpIcon:ChevronDownIcon;var fetchDetails=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _getPancakeRabbitCont,methods,bunnyCount,bunnyBurnCount;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:true});});_context.prev=1;_getPancakeRabbitCont=getPancakeRabbitContract(),methods=_getPancakeRabbitCont.methods;_context.next=5;return methods.bunnyCount(bunnyId).call();case 5:bunnyCount=_context.sent;_context.next=8;return methods.bunnyBurnCount(bunnyId).call();case 8:bunnyBurnCount=_context.sent;setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:false,isDataFetched:true,bunnyCount:parseInt(bunnyCount,10),bunnyBurnCount:parseInt(bunnyBurnCount,10)});});_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,12]]);})),[bunnyId]);var handleClick=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!state.isOpen){_context2.next=4;break;}setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:!prevState.isOpen});});_context2.next=15;break;case 4:_context2.prev=4;_context2.next=7;return fetchDetails();case 7:_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](4);console.error(_context2.t0);case 12:_context2.prev=12;setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isOpen:!prevState.isOpen});});return _context2.finish(12);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[4,9,12,15]]);}));return function handleClick(){return _ref5.apply(this,arguments);};}();var handleSuccess=function handleSuccess(){fetchDetails();reInitialize();};var _useModal=useModal(/*#__PURE__*/_jsx(ClaimNftModal,{nft:nft,onSuccess:handleSuccess})),_useModal2=_slicedToArray(_useModal,1),onPresentClaimModal=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(BurnNftModal,{nft:nft,tokenIds:tokenIds,onSuccess:handleSuccess})),_useModal4=_slicedToArray(_useModal3,1),onPresentBurnModal=_useModal4[0];var _useModal5=useModal(/*#__PURE__*/_jsx(TransferNftModal,{nft:nft,tokenIds:tokenIds,onSuccess:handleSuccess})),_useModal6=_slicedToArray(_useModal5,1),onPresentTransferModal=_useModal6[0];return/*#__PURE__*/_jsxs(Card,{isActive:walletOwnsNft,children:[/*#__PURE__*/_jsx(Image,{src:\"/images/nfts/\".concat(previewImage),alt:name,originalLink:walletOwnsNft?originalImage:null}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsx(Heading,{children:name}),isInitialized&&walletCanClaim&&/*#__PURE__*/_jsx(Tag,{outline:true,variant:\"success\",children:TranslateString(526,'Available')}),isInitialized&&tokenIds&&/*#__PURE__*/_jsx(Tag,{outline:true,variant:\"secondary\",children:TranslateString(999,'In Wallet')})]}),isInitialized&&walletOwnsNft&&/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"secondary\",mt:\"24px\",onClick:onPresentTransferModal,children:TranslateString(999,'Transfer')}),isInitialized&&!walletCanClaim&&!isSupplyAvailable&&/*#__PURE__*/_jsx(Button,{fullWidth:true,onClick:onPresentClaimModal,mt:\"24px\",children:TranslateString(999,'Claim this NFT')}),isInitialized&&canBurnNft&&walletOwnsNft&&/*#__PURE__*/_jsx(Button,{variant:\"danger\",fullWidth:true,onClick:onPresentBurnModal,mt:\"24px\",children:TranslateString(999,'Trade in for CAKE')})]}),/*#__PURE__*/_jsxs(CardFooter,{p:\"0\",children:[/*#__PURE__*/_jsx(DetailsButton,{endIcon:/*#__PURE__*/_jsx(Icon,{width:\"24px\",color:\"primary\"}),onClick:handleClick,children:state.isLoading?TranslateString(999,'Loading...'):TranslateString(999,'Details')}),state.isOpen&&/*#__PURE__*/_jsxs(InfoBlock,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"16px\",style:{textAlign:'center'},children:description}),/*#__PURE__*/_jsxs(InfoRow,{children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(999,'Number minted'),\":\"]}),/*#__PURE__*/_jsx(Value,{children:state.bunnyCount+state.bunnyBurnCount})]}),/*#__PURE__*/_jsx(InfoRow,{children:/*#__PURE__*/_jsx(StyledLinkExternal,{href:\"\".concat(nft.originalImage),children:\"Link to preview\"})})]})]})]});};export default NftCard;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftCard/index.tsx"],"names":["React","useState","useContext","useCallback","styled","Card","CardBody","Heading","Tag","Button","ChevronUpIcon","ChevronDownIcon","Text","CardFooter","useModal","LinkExternal","useI18n","InfoRow","Image","NftProviderContext","getPancakeRabbitContract","ClaimNftModal","BurnNftModal","TransferNftModal","StyledLinkExternal","theme","colors","text","primary","Header","DetailsButton","attrs","variant","fullWidth","InfoBlock","div","Value","NftCard","nft","isLoading","isOpen","bunnyCount","bunnyBurnCount","state","setState","TranslateString","isInitialized","canClaim","hasClaimed","canBurnNft","totalSupplyDistributed","currentDistributedSupply","getTokenIds","reInitialize","walletCanClaim","bunnyId","name","previewImage","originalImage","description","tokenIds","isSupplyAvailable","walletOwnsNft","length","Icon","fetchDetails","prevState","methods","call","isDataFetched","parseInt","console","error","handleClick","handleSuccess","onPresentClaimModal","onPresentBurnModal","onPresentTransferModal","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Tag,\r\n  Button,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Text,\r\n  CardFooter,\r\n  useModal,\r\n   Link, LinkExternal\r\n} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport InfoRow from '../InfoRow'\r\nimport Image from '../Image'\r\nimport { NftProviderContext } from '../../contexts/NftProvider'\r\nimport { getPancakeRabbitContract } from '../../utils/contracts'\r\nimport ClaimNftModal from '../ClaimNftModal'\r\nimport BurnNftModal from '../BurnNftModal'\r\nimport TransferNftModal from '../TransferNftModal'\r\n\r\ninterface NftCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst Header = styled(InfoRow)`\r\n  min-height: 28px;\r\n`\r\n\r\nconst DetailsButton = styled(Button).attrs({ variant: 'text', fullWidth: true })`\r\n  height: auto;\r\n  padding: 16px 24px;\r\n\r\n  &:hover:not(:disabled):not(:active) {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:focus:not(:active) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n  padding: 0 24px 24px;\r\n`\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst NftCard: React.FC<NftCardProps> = ({ nft }) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isOpen: false,\r\n    bunnyCount: 0,\r\n    bunnyBurnCount: 0,\r\n  })\r\n  const TranslateString = useI18n()\r\n  const {\r\n    isInitialized,\r\n    canClaim,\r\n    hasClaimed,\r\n    canBurnNft,\r\n    totalSupplyDistributed,\r\n    currentDistributedSupply,\r\n    getTokenIds,\r\n    reInitialize,\r\n  } = useContext(NftProviderContext)\r\n  const walletCanClaim = canClaim && !hasClaimed\r\n  const { bunnyId, name, previewImage, originalImage, description } = nft\r\n  const tokenIds = getTokenIds(bunnyId)\r\n  const isSupplyAvailable = currentDistributedSupply < totalSupplyDistributed\r\n  const walletOwnsNft = tokenIds && tokenIds.length > 0\r\n  const Icon = state.isOpen ? ChevronUpIcon : ChevronDownIcon\r\n\r\n  const fetchDetails = useCallback(async () => {\r\n    setState((prevState) => ({ ...prevState, isLoading: true }))\r\n    try {\r\n      const { methods } = getPancakeRabbitContract()\r\n      const bunnyCount = await methods.bunnyCount(bunnyId).call()\r\n      const bunnyBurnCount = await methods.bunnyBurnCount(bunnyId).call()\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: false,\r\n        isDataFetched: true,\r\n        bunnyCount: parseInt(bunnyCount, 10),\r\n        bunnyBurnCount: parseInt(bunnyBurnCount, 10),\r\n      }))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }, [bunnyId])\r\n\r\n  const handleClick = async () => {\r\n    if (state.isOpen) {\r\n      setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n    } else {\r\n      try {\r\n        await fetchDetails()\r\n      } catch (error) {\r\n        console.error(error)\r\n      } finally {\r\n        setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSuccess = () => {\r\n    fetchDetails()\r\n    reInitialize()\r\n  }\r\n\r\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} />)\r\n  const [onPresentBurnModal] = useModal(<BurnNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />)\r\n  const [onPresentTransferModal] = useModal(\r\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\r\n  )\r\n\r\n  return (\r\n    <Card isActive={walletOwnsNft}>\r\n      <Image src={`/images/nfts/${previewImage}`} alt={name} originalLink={walletOwnsNft ? originalImage : null} />\r\n      <CardBody>\r\n        <Header>\r\n          <Heading>{name}</Heading>\r\n          {isInitialized && walletCanClaim && (\r\n            <Tag outline variant=\"success\">\r\n              {TranslateString(526, 'Available')}\r\n            </Tag>\r\n          )}\r\n          {isInitialized && tokenIds && (\r\n            <Tag outline variant=\"secondary\">\r\n              {TranslateString(999, 'In Wallet')}\r\n            </Tag>\r\n          )}\r\n        </Header>\r\n        {isInitialized && walletOwnsNft && (\r\n          <Button fullWidth variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\r\n            {TranslateString(999, 'Transfer')}\r\n          </Button>\r\n        )}\r\n        {isInitialized && !walletCanClaim && !isSupplyAvailable && (\r\n          <Button fullWidth onClick={onPresentClaimModal} mt=\"24px\">\r\n            {TranslateString(999, 'Claim this NFT')}\r\n          </Button>\r\n        )}\r\n        {isInitialized && canBurnNft && walletOwnsNft && (\r\n          <Button variant=\"danger\" fullWidth onClick={onPresentBurnModal} mt=\"24px\">\r\n            {TranslateString(999, 'Trade in for CAKE')}\r\n          </Button>\r\n        )}\r\n      </CardBody>\r\n      <CardFooter p=\"0\">\r\n        <DetailsButton endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\r\n          {state.isLoading ? TranslateString(999, 'Loading...') : TranslateString(999, 'Details')}\r\n        </DetailsButton>\r\n        {state.isOpen && (\r\n          <InfoBlock>\r\n            <Text as=\"p\" color=\"textSubtle\" mb=\"16px\" style={{ textAlign: 'center' }}>\r\n              {description}\r\n            </Text>\r\n            \r\n            <InfoRow>\r\n              <Text>{TranslateString(999, 'Number minted')}:</Text>\r\n              <Value>{state.bunnyCount + state.bunnyBurnCount}</Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n             \r\n              <StyledLinkExternal href= {`${nft.originalImage}`}\r\n         \r\n            >\r\n          Link to preview\r\n        </StyledLinkExternal>\r\n            </InfoRow>\r\n          </InfoBlock>\r\n        )}\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftCard\r\n"]},"metadata":{},"sourceType":"module"}