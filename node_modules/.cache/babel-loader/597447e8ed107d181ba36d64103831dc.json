{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState}from'react';import styled from'styled-components';import{useWallet}from'@binance-chain/bsc-use-wallet';import{Button,Checkbox,Modal,Text}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import{RABBIT_MINTING_FARM_ADDRESS}from'config/constants/nfts';import{useRabbitMintingFarm}from'hooks/useContract';import InfoRow from'./InfoRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Value=styled(Text)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n\"])));var ModalContent=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var Actions=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  grid-gap: 8px;\\n\"])));var BurnNftModal=function BurnNftModal(_ref){var nft=_ref.nft,tokenIds=_ref.tokenIds,onSuccess=_ref.onSuccess,onDismiss=_ref.onDismiss;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),accepted=_useState6[0],setAccepted=_useState6[1];var TranslateString=useI18n();var _useWallet=useWallet(),account=_useWallet.account;var rabbitMintingContract=useRabbitMintingFarm(RABBIT_MINTING_FARM_ADDRESS);var handleConfirm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _tokenIds,tokenId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_tokenIds=_slicedToArray(tokenIds,1),tokenId=_tokenIds[0];_context.next=4;return rabbitMintingContract.methods.burnNFT(tokenId).send({from:account}).on('sending',function(){setIsLoading(true);}).on('receipt',function(){onDismiss();onSuccess();}).on('error',function(){console.error(error);setError('Unable to burn NFT');setIsLoading(false);});case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.error('Unable to burn NFT:',_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return function handleConfirm(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Modal,{title:TranslateString(999,'Trade in NFT'),onDismiss:onDismiss,children:[/*#__PURE__*/_jsxs(ModalContent,{children:[error&&/*#__PURE__*/_jsx(Text,{color:\"failure\",mb:\"8px\",children:error}),/*#__PURE__*/_jsxs(InfoRow,{children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(999,'Trade in'),\":\"]}),/*#__PURE__*/_jsx(Value,{children:\"1x \\\"\".concat(nft.name,\"\\\" NFT\")})]}),/*#__PURE__*/_jsxs(InfoRow,{children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(999,'You will receive'),\":\"]}),/*#__PURE__*/_jsx(Value,{children:\"10 CAKE\"})]})]}),/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(Text,{color:\"failure\",children:TranslateString(999,'When you trade in this NFT to receive CAKE, you will lose access to it forever!')}),/*#__PURE__*/_jsx(Text,{color:\"failure\",children:TranslateString(999,'It will be burned and removed from circulation')})]}),/*#__PURE__*/_jsxs(ModalContent,{style:{alignItems:'center',display:'inline-flex'},children:[/*#__PURE__*/_jsx(Checkbox,{checked:accepted,scale:\"sm\",onChange:function onChange(){return setAccepted(!accepted);}}),/*#__PURE__*/_jsx(Text,{ml:\"8px\",onClick:function onClick(){return setAccepted(!accepted);},style:{cursor:'pointer'},children:TranslateString(999,'I understand')})]}),/*#__PURE__*/_jsxs(Actions,{children:[/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"secondary\",onClick:onDismiss,children:TranslateString(462,'Cancel')}),/*#__PURE__*/_jsx(Button,{fullWidth:true,onClick:handleConfirm,disabled:!account||isLoading||!accepted,children:TranslateString(464,'Confirm')})]})]});};export default BurnNftModal;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/BurnNftModal.tsx"],"names":["React","useState","styled","useWallet","Button","Checkbox","Modal","Text","useI18n","RABBIT_MINTING_FARM_ADDRESS","useRabbitMintingFarm","InfoRow","Value","ModalContent","div","Actions","BurnNftModal","nft","tokenIds","onSuccess","onDismiss","isLoading","setIsLoading","error","setError","accepted","setAccepted","TranslateString","account","rabbitMintingContract","handleConfirm","tokenId","methods","burnNFT","send","from","on","console","name","alignItems","display","cursor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Checkbox, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\r\nimport { useRabbitMintingFarm } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\n\r\ninterface BurnNftModalProps {\r\n  nft: Nft\r\n  tokenIds: number[]\r\n  onSuccess: () => any\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst BurnNftModal: React.FC<BurnNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [accepted, setAccepted] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const rabbitMintingContract = useRabbitMintingFarm(RABBIT_MINTING_FARM_ADDRESS)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const [tokenId] = tokenIds\r\n\r\n      await rabbitMintingContract.methods\r\n        .burnNFT(tokenId)\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setIsLoading(true)\r\n        })\r\n        .on('receipt', () => {\r\n          onDismiss()\r\n          onSuccess()\r\n        })\r\n        .on('error', () => {\r\n          console.error(error)\r\n          setError('Unable to burn NFT')\r\n          setIsLoading(false)\r\n        })\r\n    } catch (err) {\r\n      console.error('Unable to burn NFT:', err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Trade in NFT')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Trade in')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\r\n          <Value>10 CAKE</Value>\r\n        </InfoRow>\r\n      </ModalContent>\r\n      <ModalContent>\r\n        <Text color=\"failure\">\r\n          {TranslateString(999, 'When you trade in this NFT to receive CAKE, you will lose access to it forever!')}\r\n        </Text>\r\n        <Text color=\"failure\">{TranslateString(999, 'It will be burned and removed from circulation')}</Text>\r\n      </ModalContent>\r\n      <ModalContent style={{ alignItems: 'center', display: 'inline-flex' }}>\r\n        <Checkbox checked={accepted} scale=\"sm\" onChange={() => setAccepted(!accepted)} />\r\n        <Text ml=\"8px\" onClick={() => setAccepted(!accepted)} style={{ cursor: 'pointer' }}>\r\n          {TranslateString(999, 'I understand')}\r\n        </Text>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !accepted}>\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BurnNftModal\r\n"]},"metadata":{},"sourceType":"module"}