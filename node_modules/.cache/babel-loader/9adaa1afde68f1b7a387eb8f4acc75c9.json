{"ast":null,"code":"import _objectSpread from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useCallback,useState}from'react';import{Route,useRouteMatch}from'react-router-dom';import{useDispatch}from'react-redux';import BigNumber from'bignumber.js';import{useWallet}from'@binance-chain/bsc-use-wallet';import{Image,Heading}from'@pancakeswap-libs/uikit';import{BLOCKS_PER_YEAR}from'config';import FlexLayout from'components/layout/Flex';import Page from'components/layout/Page';import{useFarms,usePriceBnbBusd,usePriceCakeBusd}from'state/hooks';import useRefresh from'hooks/useRefresh';import{fetchFarmUserDataAsync}from'state/actions';import{QuoteToken}from'config/constants/types';import useI18n from'hooks/useI18n';import FarmCard from'./components/FarmCard/FarmCard';import FarmTabButtons from'./components/FarmTabButtons';import Divider from'./components/Divider';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Farms=function Farms(farmsProps){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var TranslateString=useI18n();var farmsLP=useFarms();var cakePrice=usePriceCakeBusd();var bnbPrice=usePriceBnbBusd();var _useWallet=useWallet(),account=_useWallet.account,ethereum=_useWallet.ethereum;console.log(account);var tokenMode=farmsProps.tokenMode;var dispatch=useDispatch();var _useRefresh=useRefresh(),fastRefresh=_useRefresh.fastRefresh;console.log(farmsLP);useEffect(function(){if(account){dispatch(fetchFarmUserDataAsync(account));}},[account,dispatch,fastRefresh]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),stakedOnly=_useState2[0],setStakedOnly=_useState2[1];var activeFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier!=='0X';});var inactiveFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier==='0X';});var stakedOnlyFarms=activeFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var pastaOnlyFarms=activeFarms.filter(function(farm){return farm.lpSymbol.startsWith(\"NGTHY\");});var busdOnlyFarms=activeFarms.filter(function(farm){return farm.lpSymbol.includes(\"BUSD\");});var bnbOnlyFarms=activeFarms.filter(function(farm){return farm.lpSymbol.includes(\"BNB\");});var stakedBusdOnlyFarms=busdOnlyFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var stakedBnbOnlyFarms=bnbOnlyFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var stakedPastaOnlyFarms=pastaOnlyFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});// /!\\ This function will be removed soon\n// This function compute the APY for each farm and will be replaced when we have a reliable API\n// to retrieve assets prices against USD\nvar farmsList=useCallback(function(farmsToDisplay,removed){// const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\nvar farmsToDisplayWithAPY=farmsToDisplay.map(function(farm){// if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n//   return farm\n// }\nvar cakeRewardPerBlock=new BigNumber(farm.pastaPerBlock||1).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18));var cakeRewardPerYear=cakeRewardPerBlock.times(BLOCKS_PER_YEAR);var cakeRewardPerMonth=cakeRewardPerYear.div(12);var apy=cakePrice.times(cakeRewardPerYear);if(farm.quoteTokenSymbol===QuoteToken.NGTHY){apy=cakePrice.times(cakeRewardPerMonth);}var totalValue=new BigNumber(farm.lpTotalInQuoteToken||0);if(farm.quoteTokenSymbol===QuoteToken.BNB){totalValue=totalValue.times(bnbPrice);}if(totalValue.comparedTo(0)>0){apy=apy.div(totalValue);}return _objectSpread(_objectSpread({},farm),{},{apy:apy});});return farmsToDisplayWithAPY.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,removed:removed,bnbPrice:bnbPrice,cakePrice:cakePrice,ethereum:ethereum,account:account},farm.pid);});},[bnbPrice,account,cakePrice,ethereum]);// stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}\n// pastaOnly={pastOnly} setPastaOnly={setPastaOnly}\nreturn/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h1\",size:\"lg\",color:\"primary\",mb:\"50px\",style:{textAlign:'center'},children:tokenMode?'Dont waist your Naughty to watch the videos Stake tokens to earn NGTHY':'Stake your LP tokens to earn NGTHY'}),/*#__PURE__*/_jsx(Heading,{as:\"h2\",color:\"secondary\",mb:\"50px\",style:{textAlign:'center'},children:\"Dont waist your Naughty to watch the videos\"}),/*#__PURE__*/_jsx(FarmTabButtons,{stakedOnly:stakedOnly,setStakedOnly:setStakedOnly}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:stakedOnly?farmsList(stakedOnlyFarms,false):farmsList(activeFarms,false)}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/ngthy\"),children:stakedOnly?farmsList(stakedPastaOnlyFarms,false):farmsList(pastaOnlyFarms,false)}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/busd\"),children:stakedOnly?farmsList(stakedBusdOnlyFarms,false):farmsList(busdOnlyFarms,false)}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/bnb\"),children:stakedOnly?farmsList(stakedBnbOnlyFarms,false):farmsList(bnbOnlyFarms,false)})]})]}),/*#__PURE__*/_jsx(Image,{src:\"/images/egg/8.png\",alt:\"illustration\",width:1352,height:587,responsive:true})]});};export default Farms;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","Route","useRouteMatch","useDispatch","BigNumber","useWallet","Image","Heading","BLOCKS_PER_YEAR","FlexLayout","Page","useFarms","usePriceBnbBusd","usePriceCakeBusd","useRefresh","fetchFarmUserDataAsync","QuoteToken","useI18n","FarmCard","FarmTabButtons","Divider","Farms","farmsProps","path","TranslateString","farmsLP","cakePrice","bnbPrice","account","ethereum","console","log","tokenMode","dispatch","fastRefresh","stakedOnly","setStakedOnly","activeFarms","filter","farm","isTokenOnly","multiplier","inactiveFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","pastaOnlyFarms","lpSymbol","startsWith","busdOnlyFarms","includes","bnbOnlyFarms","stakedBusdOnlyFarms","stakedBnbOnlyFarms","stakedPastaOnlyFarms","farmsList","farmsToDisplay","removed","farmsToDisplayWithAPY","map","cakeRewardPerBlock","pastaPerBlock","times","poolWeight","div","pow","cakeRewardPerYear","cakeRewardPerMonth","apy","quoteTokenSymbol","NGTHY","totalValue","lpTotalInQuoteToken","BNB","comparedTo","pid","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  console.log(account)\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  console.log(farmsLP)\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  \n  const pastaOnlyFarms = activeFarms.filter(\n    (farm) => farm.lpSymbol.startsWith(\"NGTHY\"),\n\n  )\n  const busdOnlyFarms = activeFarms.filter(\n    (farm) => farm.lpSymbol.includes(\"BUSD\") \n  )\n\n  const bnbOnlyFarms = activeFarms.filter(\n    (farm) => farm.lpSymbol.includes(\"BNB\") \n  )\n\n  const stakedBusdOnlyFarms = busdOnlyFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  const stakedBnbOnlyFarms = bnbOnlyFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  const stakedPastaOnlyFarms = pastaOnlyFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  \n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n               const cakeRewardPerBlock = new BigNumber(farm.pastaPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        const cakeRewardPerMonth = cakeRewardPerYear.div(12)\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n        if (farm.quoteTokenSymbol === QuoteToken.NGTHY) {\n          apy = cakePrice.times(cakeRewardPerMonth);\n        }\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n// stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}\n// pastaOnly={pastOnly} setPastaOnly={setPastaOnly}\n\n  return (\n    <Page>\n      <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        { \n          tokenMode ?\n            'Dont waist your Naughty to watch the videos Stake tokens to earn NGTHY'\n            :\n          'Stake your LP tokens to earn NGTHY'\n        }\n      </Heading>\n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Dont waist your Naughty to watch the videos\n      </Heading>\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}/>\n      <div>\n        <Divider />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/ngthy`}>\n          {stakedOnly ? farmsList(stakedPastaOnlyFarms, false) : farmsList(pastaOnlyFarms, false)}\n          </Route>\n          <Route exact path={`${path}/busd`}>\n            {stakedOnly ? farmsList(stakedBusdOnlyFarms, false) : farmsList(busdOnlyFarms, false)}\n          </Route>\n          <Route exact path={`${path}/bnb`}>\n            {stakedOnly ? farmsList(stakedBnbOnlyFarms, false) : farmsList(bnbOnlyFarms, false)}\n          </Route>\n        </FlexLayout>\n      </div>\n      <Image src=\"/images/egg/8.png\" alt=\"illustration\" width={1352} height={587} responsive />\n    </Page>\n  )\n}\n\nexport default Farms\n"]},"metadata":{},"sourceType":"module"}