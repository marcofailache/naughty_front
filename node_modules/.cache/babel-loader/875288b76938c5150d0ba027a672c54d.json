{"ast":null,"code":"import _slicedToArray from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useMemo,useState}from'react';import BigNumber from'bignumber.js';import styled,{keyframes}from'styled-components';import{Flex,Text,Skeleton}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import ExpandableSectionButton from'components/ExpandableSectionButton';import{QuoteToken}from'config/constants/types';import DetailsSection from'./DetailsSection';import CardHeading from'./CardHeading';import CardActionsContainer from'./CardActionsContainer';import ApyButton from'./ApyButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var RainbowLight=keyframes(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  0% {\\n    background-position: 0% 50%;\\n  }\\n  50% {\\n    background-position: 100% 50%;\\n  }\\n  100% {\\n    background-position: 0% 50%;\\n  }\\n\"])));var StyledCardAccent=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background: linear-gradient(45deg,\\n  rgba(255, 0, 0, 1) 0%,\\n  rgba(255, 154, 0, 1) 10%,\\n  rgba(208, 222, 33, 1) 20%,\\n  rgba(79, 220, 74, 1) 30%,\\n  rgba(63, 218, 216, 1) 40%,\\n  rgba(47, 201, 226, 1) 50%,\\n  rgba(28, 127, 238, 1) 60%,\\n  rgba(95, 21, 242, 1) 70%,\\n  rgba(186, 12, 248, 1) 80%,\\n  rgba(251, 7, 217, 1) 90%,\\n  rgba(255, 0, 0, 1) 100%);\\n  background-size: 300% 300%;\\n  animation: \",\" 2s linear infinite;\\n  border-radius: 16px;\\n  filter: blur(6px);\\n  position: absolute;\\n  top: -2px;\\n  right: -2px;\\n  bottom: -2px;\\n  left: -2px;\\n  z-index: -1;\\n\"])),RainbowLight);var FCard=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  align-self: baseline;\\n  background: \",\";\\n  border-radius: 32px;\\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n  padding: 24px;\\n  position: relative;\\n  text-align: center;\\n\"])),function(props){return props.theme.card.background;});var Divider=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  height: 1px;\\n  margin: 28px auto;\\n  width: 100%;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.borderColor;});var ExpandingWrapper=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  height: \",\";\\n  overflow: hidden;\\n\"])),function(props){return props.expanded?'100%':'0px';});var FarmCard=function FarmCard(_ref2){var farm=_ref2.farm,removed=_ref2.removed,cakePrice=_ref2.cakePrice,bnbPrice=_ref2.bnbPrice,ethereum=_ref2.ethereum,account=_ref2.account;var TranslateString=useI18n();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showExpandableSection=_useState2[0],setShowExpandableSection=_useState2[1];// const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n// We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n// NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n//  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\nvar farmImage=farm.lpSymbol.split(' ')[0].toLowerCase();var totalValue=useMemo(function(){if(!farm.lpTotalInQuoteToken){return null;}if(farm.quoteTokenSymbol===QuoteToken.BNB){return bnbPrice.times(farm.lpTotalInQuoteToken);}if(farm.quoteTokenSymbol===QuoteToken.CAKE){return cakePrice.times(farm.lpTotalInQuoteToken);}return farm.lpTotalInQuoteToken;},[bnbPrice,cakePrice,farm.lpTotalInQuoteToken,farm.quoteTokenSymbol]);var totalValueFormated=totalValue?\"$\".concat(Number(totalValue).toLocaleString(undefined,{maximumFractionDigits:0})):'-';var lpLabel=farm.lpSymbol;var earnLabel='FLIX';var farmAPY=farm.apy&&farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined,{minimumFractionDigits:2,maximumFractionDigits:2});var quoteTokenAdresses=farm.quoteTokenAdresses,quoteTokenSymbol=farm.quoteTokenSymbol,tokenAddresses=farm.tokenAddresses,risk=farm.risk;return/*#__PURE__*/_jsxs(FCard,{children:[farm.tokenSymbol==='FLIX'||/*#__PURE__*/_jsx(StyledCardAccent,{}),/*#__PURE__*/_jsx(CardHeading,{lpLabel:lpLabel,multiplier:farm.multiplier,risk:risk,depositFee:farm.depositFeeBP,farmImage:farmImage,tokenSymbol:farm.tokenSymbol}),!removed&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(352,'APR'),\":\"]}),/*#__PURE__*/_jsx(Text,{bold:true,style:{display:'flex',alignItems:'center'},children:farm.apy?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ApyButton,{lpLabel:lpLabel,quoteTokenAdresses:quoteTokenAdresses,quoteTokenSymbol:quoteTokenSymbol,tokenAddresses:tokenAddresses,cakePrice:cakePrice,apy:farm.apy}),farmAPY,\"%\"]}):/*#__PURE__*/_jsx(Skeleton,{height:24,width:80})})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(318,'Earn'),\":\"]}),/*#__PURE__*/_jsx(Text,{bold:true,children:earnLabel})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{style:{fontSize:'24px'},children:[TranslateString(10001,'Deposit Fee'),\":\"]}),/*#__PURE__*/_jsxs(Text,{bold:true,style:{fontSize:'24px'},children:[farm.depositFeeBP/100,\"%\"]})]}),/*#__PURE__*/_jsx(CardActionsContainer,{farm:farm,ethereum:ethereum,account:account}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(ExpandableSectionButton,{onClick:function onClick(){return setShowExpandableSection(!showExpandableSection);},expanded:showExpandableSection}),/*#__PURE__*/_jsx(ExpandingWrapper,{expanded:showExpandableSection,children:/*#__PURE__*/_jsx(DetailsSection,{removed:removed,isTokenOnly:farm.isTokenOnly,bscScanAddress:farm.isTokenOnly?\"https://bscscan.com/token/\".concat(farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]):\"https://bscscan.com/token/\".concat(farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]),totalValueFormated:totalValueFormated,lpLabel:lpLabel,quoteTokenAdresses:quoteTokenAdresses,quoteTokenSymbol:quoteTokenSymbol,tokenAddresses:tokenAddresses})})]});};export default FarmCard;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/FarmCard.tsx"],"names":["React","useMemo","useState","BigNumber","styled","keyframes","Flex","Text","Skeleton","useI18n","ExpandableSectionButton","QuoteToken","DetailsSection","CardHeading","CardActionsContainer","ApyButton","RainbowLight","StyledCardAccent","div","FCard","props","theme","card","background","Divider","colors","borderColor","ExpandingWrapper","expanded","FarmCard","farm","removed","cakePrice","bnbPrice","ethereum","account","TranslateString","showExpandableSection","setShowExpandableSection","farmImage","lpSymbol","split","toLowerCase","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","BNB","times","CAKE","totalValueFormated","Number","toLocaleString","undefined","maximumFractionDigits","lpLabel","earnLabel","farmAPY","apy","toNumber","minimumFractionDigits","quoteTokenAdresses","tokenAddresses","risk","tokenSymbol","multiplier","depositFeeBP","display","alignItems","fontSize","isTokenOnly","process","env","REACT_APP_CHAIN_ID","lpAddresses"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(45deg,\n  rgba(255, 0, 0, 1) 0%,\n  rgba(255, 154, 0, 1) 10%,\n  rgba(208, 222, 33, 1) 20%,\n  rgba(79, 220, 74, 1) 30%,\n  rgba(63, 218, 216, 1) 40%,\n  rgba(47, 201, 226, 1) 50%,\n  rgba(28, 127, 238, 1) 60%,\n  rgba(95, 21, 242, 1) 70%,\n  rgba(186, 12, 248, 1) 80%,\n  rgba(251, 7, 217, 1) 90%,\n  rgba(255, 0, 0, 1) 100%);\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n //  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n  const farmImage = farm.lpSymbol.split(' ')[0].toLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = 'FLIX'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  })\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\n\n  return (\n    <FCard >\n      {farm.tokenSymbol === 'FLIX' || <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        risk={risk}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent='space-between' alignItems='center'>\n          <Text>{TranslateString(352, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  cakePrice={cakePrice}\n                  apy={farm.apy}\n                />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent='space-between'>\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          isTokenOnly={farm.isTokenOnly}\n          bscScanAddress={\n            farm.isTokenOnly ?\n              `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n              :\n              `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\n          }\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n"]},"metadata":{},"sourceType":"module"}