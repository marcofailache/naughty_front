{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftProgress.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Card, CardBody, Heading, OpenNewIcon, Text, Link as UIKitLink, Progress } from '@pancakeswap-libs/uikit';\nimport { BSC_BLOCK_TIME } from 'config';\nimport useI18n from 'hooks/useI18n';\nimport useBlock from 'hooks/useBlock';\nimport getTimePeriods from 'utils/getTimePeriods';\nimport formatTimePeriod from 'utils/formatTimePeriod';\nimport { NftProviderContext } from '../contexts/NftProvider';\nimport InfoRow from './InfoRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeLeft = styled(Heading)`\n  margin-bottom: 16px;\n  text-align: center;\n`;\n_c = TimeLeft;\nconst Link = styled(UIKitLink)`\n  text-decoration: underline;\n`;\n_c2 = Link;\nconst Message = styled.p`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  font-size: 14px;\n  padding-top: 16px;\n  text-align: center;\n`;\n_c3 = Message;\nconst ProgressWrap = styled.div`\n  margin-bottom: 16px;\n`;\n_c4 = ProgressWrap;\n\nconst NftProgress = () => {\n  _s();\n\n  const {\n    isInitialized,\n    currentDistributedSupply,\n    totalSupplyDistributed,\n    countBunniesBurnt,\n    startBlockNumber,\n    endBlockNumber\n  } = useContext(NftProviderContext);\n  const TranslateString = useI18n();\n  const currentBlock = useBlock();\n  const secondsRemaining = (endBlockNumber - currentBlock) * BSC_BLOCK_TIME;\n  const timeLeft = formatTimePeriod(getTimePeriods(secondsRemaining), ['seconds']);\n  const totalBlocks = endBlockNumber - startBlockNumber;\n  const progress = currentBlock > startBlockNumber ? (currentBlock - startBlockNumber) / totalBlocks * 100 : 5;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressWrap, {\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          primaryStep: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeLeft, {\n        children: timeLeft ? TranslateString(999, `${timeLeft} left to trade in NFTs`) : TranslateString(999, 'Finished!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoRow, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [TranslateString(999, \"Total NFT's claimed\"), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: !isInitialized ? '...' : `${currentDistributedSupply}/${totalSupplyDistributed}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoRow, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [TranslateString(999, \"Total NFT's burned\"), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: !isInitialized ? '...' : `${countBunniesBurnt}/${totalSupplyDistributed}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoRow, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [TranslateString(999, 'Can be traded until'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [!isInitialized ? '...' : /*#__PURE__*/_jsxDEV(Link, {\n            href: `https://bscscan.com/block/${endBlockNumber}`,\n            target: \"_blank\",\n            rel: \"noreferrer noopener\",\n            children: [`Block ${endBlockNumber}`, /*#__PURE__*/_jsxDEV(OpenNewIcon, {\n              color: \"primary\",\n              ml: \"2px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: TranslateString(999, 'NFTs can be traded in for CAKE until the above block height')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NftProgress, \"nBDA6yziS8xtjfneDf6VD2dumDU=\", false, function () {\n  return [useI18n, useBlock];\n});\n\n_c5 = NftProgress;\nexport default NftProgress;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TimeLeft\");\n$RefreshReg$(_c2, \"Link\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"ProgressWrap\");\n$RefreshReg$(_c5, \"NftProgress\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftProgress.tsx"],"names":["React","useContext","styled","Card","CardBody","Heading","OpenNewIcon","Text","Link","UIKitLink","Progress","BSC_BLOCK_TIME","useI18n","useBlock","getTimePeriods","formatTimePeriod","NftProviderContext","InfoRow","TimeLeft","Message","p","theme","colors","textSubtle","ProgressWrap","div","NftProgress","isInitialized","currentDistributedSupply","totalSupplyDistributed","countBunniesBurnt","startBlockNumber","endBlockNumber","TranslateString","currentBlock","secondsRemaining","timeLeft","totalBlocks","progress"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, OpenNewIcon, Text, Link as UIKitLink, Progress } from '@pancakeswap-libs/uikit'\r\nimport { BSC_BLOCK_TIME } from 'config'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport formatTimePeriod from 'utils/formatTimePeriod'\r\nimport { NftProviderContext } from '../contexts/NftProvider'\r\nimport InfoRow from './InfoRow'\r\n\r\nconst TimeLeft = styled(Heading)`\r\n  margin-bottom: 16px;\r\n  text-align: center;\r\n`\r\n\r\nconst Link = styled(UIKitLink)`\r\n  text-decoration: underline;\r\n`\r\n\r\nconst Message = styled.p`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  padding-top: 16px;\r\n  text-align: center;\r\n`\r\n\r\nconst ProgressWrap = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst NftProgress = () => {\r\n  const {\r\n    isInitialized,\r\n    currentDistributedSupply,\r\n    totalSupplyDistributed,\r\n    countBunniesBurnt,\r\n    startBlockNumber,\r\n    endBlockNumber,\r\n  } = useContext(NftProviderContext)\r\n  const TranslateString = useI18n()\r\n  const currentBlock = useBlock()\r\n  const secondsRemaining = (endBlockNumber - currentBlock) * BSC_BLOCK_TIME\r\n  const timeLeft = formatTimePeriod(getTimePeriods(secondsRemaining), ['seconds'])\r\n  const totalBlocks = endBlockNumber - startBlockNumber\r\n  const progress = currentBlock > startBlockNumber ? ((currentBlock - startBlockNumber) / totalBlocks) * 100 : 5\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <ProgressWrap>\r\n          <Progress primaryStep={progress} />\r\n        </ProgressWrap>\r\n        <TimeLeft>\r\n          {timeLeft ? TranslateString(999, `${timeLeft} left to trade in NFTs`) : TranslateString(999, 'Finished!')}\r\n        </TimeLeft>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, \"Total NFT's claimed\")}:</Text>\r\n          <Text>\r\n            <strong>{!isInitialized ? '...' : `${currentDistributedSupply}/${totalSupplyDistributed}`}</strong>\r\n          </Text>\r\n        </InfoRow>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, \"Total NFT's burned\")}:</Text>\r\n          <Text>\r\n            <strong>{!isInitialized ? '...' : `${countBunniesBurnt}/${totalSupplyDistributed}`}</strong>\r\n          </Text>\r\n        </InfoRow>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Can be traded until')}:</Text>\r\n          <div>\r\n            {!isInitialized ? (\r\n              '...'\r\n            ) : (\r\n              <Link href={`https://bscscan.com/block/${endBlockNumber}`} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                {`Block ${endBlockNumber}`}\r\n                <OpenNewIcon color=\"primary\" ml=\"2px\" />\r\n              </Link>\r\n            )}{' '}\r\n          </div>\r\n        </InfoRow>\r\n        <Message>{TranslateString(999, 'NFTs can be traded in for CAKE until the above block height')}</Message>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftProgress\r\n"]},"metadata":{},"sourceType":"module"}