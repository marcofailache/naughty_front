{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/BuyTicketModal.tsx\",\n    _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Modal } from '@pancakeswap-libs/uikit';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport TicketInput from 'components/TicketInput';\nimport ModalActions from 'components/ModalActions';\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery';\nimport useI18n from 'hooks/useI18n';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BuyTicketModal = ({\n  max,\n  onDismiss\n}) => {\n  _s();\n\n  const [val, setVal] = useState('1');\n  const [pendingTx, setPendingTx] = useState(false);\n  const [, setRequestedBuy] = useState(false);\n  const TranslateString = useI18n();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))));\n  }, [max]);\n\n  const handleChange = e => setVal(e.currentTarget.value);\n\n  const {\n    onMultiBuy\n  } = useMultiBuyLottery();\n  const maxNumber = useMaxNumber();\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true);\n      const length = parseInt(val); // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n\n      const numbers = Array.apply(null, {\n        length\n      }).map(() => [Math.floor(Math.random() * maxNumber) + 1, Math.floor(Math.random() * maxNumber) + 1, Math.floor(Math.random() * maxNumber) + 1, Math.floor(Math.random() * maxNumber) + 1]);\n      const txHash = await onMultiBuy('10', numbers); // user rejected tx or didn't go thru\n\n      if (txHash) {\n        setRequestedBuy(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val]);\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > 50) {\n      setVal('50');\n    } else {\n      setVal(maxTickets.toString());\n    }\n  }, [maxTickets]);\n\n  const cakeCosts = amount => {\n    return +amount * 10;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: TranslateString(450, 'Enter amount of tickets to buy'),\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(TicketInput, {\n      value: val,\n      onSelectMax: handleSelectMax,\n      onChange: handleChange,\n      max: fullBalance,\n      symbol: \"TICKET\",\n      availableSymbol: \"CAKE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Tips, {\n        children: TranslateString(456, 'Your amount must be a multiple of 10 CAKE')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tips, {\n        children: TranslateString(458, '1 Ticket = 10 CAKE')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Announce, {\n        children: TranslateString(478, 'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Final, {\n        children: TranslateString(460, `You will spend: ${cakeCosts(val)} PASTA`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"secondary\",\n        onClick: onDismiss,\n        children: TranslateString(462, 'Cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"lottery-buy-complete\",\n        fullWidth: true,\n        disabled: pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1,\n        onClick: async () => {\n          setPendingTx(true);\n          await handleBuy();\n          setPendingTx(false);\n          onDismiss();\n        },\n        children: pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BuyTicketModal, \"HrY5Mwzj03vSINEVS6ihQccgxJA=\", false, function () {\n  return [useI18n, useMultiBuyLottery, useMaxNumber];\n});\n\n_c = BuyTicketModal;\nexport default BuyTicketModal;\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.primary};\n`;\n_c2 = Tips;\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${props => props.theme.colors.primary};\n`;\n_c3 = Final;\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`;\n_c4 = Announce;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"BuyTicketModal\");\n$RefreshReg$(_c2, \"Tips\");\n$RefreshReg$(_c3, \"Final\");\n$RefreshReg$(_c4, \"Announce\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/BuyTicketModal.tsx"],"names":["BigNumber","React","useCallback","useMemo","useState","styled","Button","Modal","getFullDisplayBalance","TicketInput","ModalActions","useMultiBuyLottery","useMaxNumber","useI18n","BuyTicketModal","max","onDismiss","val","setVal","pendingTx","setPendingTx","setRequestedBuy","TranslateString","fullBalance","maxTickets","parseInt","div","handleChange","e","currentTarget","value","onMultiBuy","maxNumber","handleBuy","length","numbers","Array","apply","map","Math","floor","random","txHash","console","error","handleSelectMax","Number","toString","cakeCosts","amount","Tips","props","theme","colors","primary","Final","Announce"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy('10', numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > 50) {\r\n      setVal('50')\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * 10\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"CAKE\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 CAKE')}</Tips>\r\n        <Tips>{TranslateString(458, '1 Ticket = 10 CAKE')}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} PASTA`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          fullWidth\r\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n"]},"metadata":{},"sourceType":"module"}