{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import BigNumber from'bignumber.js';import{useWallet}from'@binance-chain/bsc-use-wallet';import{useCake,useLottery}from'./useContract';import{getAllowance}from'../utils/erc20';// Retrieve lottery allowance\nexport var useLotteryAllowance=function useLotteryAllowance(){var _useState=useState(new BigNumber(0)),_useState2=_slicedToArray(_useState,2),allowance=_useState2[0],setAllowance=_useState2[1];var _useWallet=useWallet(),account=_useWallet.account;var lotteryContract=useLottery();var cakeContract=useCake();useEffect(function(){var fetchAllowance=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getAllowance(cakeContract,lotteryContract,account);case 2:res=_context.sent;setAllowance(new BigNumber(res));case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchAllowance(){return _ref.apply(this,arguments);};}();if(account&&cakeContract&&cakeContract){fetchAllowance();}var refreshInterval=setInterval(fetchAllowance,10000);return function(){return clearInterval(refreshInterval);};},[account,cakeContract,lotteryContract]);return allowance;};// Retrieve IFO allowance\nexport var useIfoAllowance=function useIfoAllowance(tokenContract,spenderAddress,dependency){var _useWallet2=useWallet(),account=_useWallet2.account;var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),allowance=_useState4[0],setAllowance=_useState4[1];useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return tokenContract.methods.allowance(account,spenderAddress).call();case 3:res=_context2.sent;setAllowance(new BigNumber(res));_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);setAllowance(null);case 10:case\"end\":return _context2.stop();}}},_callee2,null,[[0,7]]);}));return function fetch(){return _ref2.apply(this,arguments);};}();fetch();},[account,spenderAddress,tokenContract,dependency]);return allowance;};","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useAllowance.ts"],"names":["useEffect","useState","BigNumber","useWallet","useCake","useLottery","getAllowance","useLotteryAllowance","allowance","setAllowance","account","lotteryContract","cakeContract","fetchAllowance","res","refreshInterval","setInterval","clearInterval","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch","methods","call"],"mappings":"+eAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,SAAT,KAA0B,+BAA1B,CAEA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,eAApC,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA;AACA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CACvC,cAAkCN,QAAQ,CAAC,GAAIC,CAAAA,SAAJ,CAAc,CAAd,CAAD,CAA1C,wCAAOM,SAAP,eAAkBC,YAAlB,eACA,eAAyCN,SAAS,EAAlD,CAAQO,OAAR,YAAQA,OAAR,CACA,GAAMC,CAAAA,eAAe,CAAGN,UAAU,EAAlC,CACA,GAAMO,CAAAA,YAAY,CAAGR,OAAO,EAA5B,CAEAJ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,cAAc,0FAAG,iKACHP,CAAAA,YAAY,CAACM,YAAD,CAAeD,eAAf,CAAgCD,OAAhC,CADT,QACfI,GADe,eAErBL,YAAY,CAAC,GAAIP,CAAAA,SAAJ,CAAcY,GAAd,CAAD,CAAZ,CAFqB,sDAAH,kBAAdD,CAAAA,cAAc,0CAApB,CAKA,GAAIH,OAAO,EAAIE,YAAX,EAA2BA,YAA/B,CAA6C,CAC3CC,cAAc,GACf,CACD,GAAME,CAAAA,eAAe,CAAGC,WAAW,CAACH,cAAD,CAAiB,KAAjB,CAAnC,CACA,MAAO,kBAAMI,CAAAA,aAAa,CAACF,eAAD,CAAnB,EAAP,CACD,CAXQ,CAWN,CAACL,OAAD,CAAUE,YAAV,CAAwBD,eAAxB,CAXM,CAAT,CAaA,MAAOH,CAAAA,SAAP,CACD,CApBM,CAsBP;AACA,MAAO,IAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,aAAD,CAA0BC,cAA1B,CAAkDC,UAAlD,CAAuE,CACpG,gBAAyClB,SAAS,EAAlD,CAAQO,OAAR,aAAQA,OAAR,CACA,eAAkCT,QAAQ,CAAC,IAAD,CAA1C,yCAAOO,SAAP,eAAkBC,YAAlB,eAEAT,SAAS,CAAC,UAAM,CACd,GAAMsB,CAAAA,KAAK,2FAAG,wLAEQH,CAAAA,aAAa,CAACI,OAAd,CAAsBf,SAAtB,CAAgCE,OAAhC,CAAyCU,cAAzC,EAAyDI,IAAzD,EAFR,QAEJV,GAFI,gBAGVL,YAAY,CAAC,GAAIP,CAAAA,SAAJ,CAAcY,GAAd,CAAD,CAAZ,CAHU,mFAKVL,YAAY,CAAC,IAAD,CAAZ,CALU,sEAAH,kBAALa,CAAAA,KAAK,2CAAX,CAQAA,KAAK,GACN,CAVQ,CAUN,CAACZ,OAAD,CAAUU,cAAV,CAA0BD,aAA1B,CAAyCE,UAAzC,CAVM,CAAT,CAYA,MAAOb,CAAAA,SAAP,CACD,CAjBM","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n"]},"metadata":{},"sourceType":"module"}