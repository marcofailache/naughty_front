{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/**\r\n * Get data for a specific lottery\r\n */var getLotteryRoundData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(lotteryNumber){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://api.pastafinance.com/api/singleLottery?lotteryNumber=\".concat(lotteryNumber));case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;return _context.abrupt(\"return\",data);case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);throw new Error(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function getLotteryRoundData(_x){return _ref.apply(this,arguments);};}();export default getLotteryRoundData;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getLotteryRoundData.ts"],"names":["getLotteryRoundData","lotteryNumber","fetch","response","json","data","Error"],"mappings":"yUAmBA;AACA;AACA,GACA,GAAMA,CAAAA,mBAAmB,0FAAG,iBAAOC,aAAP,0KAEDC,CAAAA,KAAK,wEAAiED,aAAjE,EAFJ,QAElBE,QAFkB,qCAGLA,CAAAA,QAAQ,CAACC,IAAT,EAHK,QAGlBC,IAHkB,+CAKjBA,IALiB,iEAOlB,IAAIC,CAAAA,KAAJ,aAPkB,sEAAH,kBAAnBN,CAAAA,mBAAmB,4CAAzB,CAWA,cAAeA,CAAAA,mBAAf","sourcesContent":["export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pastafinance.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n"]},"metadata":{},"sourceType":"module"}