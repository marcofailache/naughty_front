{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useContext}from'react';import styled from'styled-components';import{Card,CardBody,Heading,OpenNewIcon,Text,Link as UIKitLink,Progress}from'@pancakeswap-libs/uikit';import{BSC_BLOCK_TIME}from'config';import useI18n from'hooks/useI18n';import useBlock from'hooks/useBlock';import getTimePeriods from'utils/getTimePeriods';import formatTimePeriod from'utils/formatTimePeriod';import{NftProviderContext}from'../contexts/NftProvider';import InfoRow from'./InfoRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TimeLeft=styled(Heading)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n  text-align: center;\\n\"])));var Link=styled(UIKitLink)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  text-decoration: underline;\\n\"])));var Message=styled.p(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 14px;\\n  padding-top: 16px;\\n  text-align: center;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.textSubtle;});var ProgressWrap=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var NftProgress=function NftProgress(){var _useContext=useContext(NftProviderContext),isInitialized=_useContext.isInitialized,currentDistributedSupply=_useContext.currentDistributedSupply,totalSupplyDistributed=_useContext.totalSupplyDistributed,countBunniesBurnt=_useContext.countBunniesBurnt,startBlockNumber=_useContext.startBlockNumber,endBlockNumber=_useContext.endBlockNumber;var TranslateString=useI18n();var currentBlock=useBlock();var secondsRemaining=(endBlockNumber-currentBlock)*BSC_BLOCK_TIME;var timeLeft=formatTimePeriod(getTimePeriods(secondsRemaining),['seconds']);var totalBlocks=endBlockNumber-startBlockNumber;var progress=currentBlock>startBlockNumber?(currentBlock-startBlockNumber)/totalBlocks*100:5;return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(ProgressWrap,{children:/*#__PURE__*/_jsx(Progress,{primaryStep:progress})}),/*#__PURE__*/_jsx(TimeLeft,{children:timeLeft?TranslateString(999,\"\".concat(timeLeft,\" left to trade in NFTs\")):TranslateString(999,'Finished!')}),/*#__PURE__*/_jsxs(InfoRow,{children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(999,\"Total NFT's claimed\"),\":\"]}),/*#__PURE__*/_jsx(Text,{children:/*#__PURE__*/_jsx(\"strong\",{children:!isInitialized?'...':\"\".concat(currentDistributedSupply,\"/\").concat(totalSupplyDistributed)})})]}),/*#__PURE__*/_jsxs(InfoRow,{children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(999,\"Total NFT's burned\"),\":\"]}),/*#__PURE__*/_jsx(Text,{children:/*#__PURE__*/_jsx(\"strong\",{children:!isInitialized?'...':\"\".concat(countBunniesBurnt,\"/\").concat(totalSupplyDistributed)})})]}),/*#__PURE__*/_jsxs(InfoRow,{children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(999,'Can be traded until'),\":\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[!isInitialized?'...':/*#__PURE__*/_jsxs(Link,{href:\"https://bscscan.com/block/\".concat(endBlockNumber),target:\"_blank\",rel:\"noreferrer noopener\",children:[\"Block \".concat(endBlockNumber),/*#__PURE__*/_jsx(OpenNewIcon,{color:\"primary\",ml:\"2px\"})]}),' ']})]}),/*#__PURE__*/_jsx(Message,{children:TranslateString(999,'NFTs can be traded in for CAKE until the above block height')})]})});};export default NftProgress;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftProgress.tsx"],"names":["React","useContext","styled","Card","CardBody","Heading","OpenNewIcon","Text","Link","UIKitLink","Progress","BSC_BLOCK_TIME","useI18n","useBlock","getTimePeriods","formatTimePeriod","NftProviderContext","InfoRow","TimeLeft","Message","p","theme","colors","textSubtle","ProgressWrap","div","NftProgress","isInitialized","currentDistributedSupply","totalSupplyDistributed","countBunniesBurnt","startBlockNumber","endBlockNumber","TranslateString","currentBlock","secondsRemaining","timeLeft","totalBlocks","progress"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Heading, OpenNewIcon, Text, Link as UIKitLink, Progress } from '@pancakeswap-libs/uikit'\r\nimport { BSC_BLOCK_TIME } from 'config'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport formatTimePeriod from 'utils/formatTimePeriod'\r\nimport { NftProviderContext } from '../contexts/NftProvider'\r\nimport InfoRow from './InfoRow'\r\n\r\nconst TimeLeft = styled(Heading)`\r\n  margin-bottom: 16px;\r\n  text-align: center;\r\n`\r\n\r\nconst Link = styled(UIKitLink)`\r\n  text-decoration: underline;\r\n`\r\n\r\nconst Message = styled.p`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  padding-top: 16px;\r\n  text-align: center;\r\n`\r\n\r\nconst ProgressWrap = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst NftProgress = () => {\r\n  const {\r\n    isInitialized,\r\n    currentDistributedSupply,\r\n    totalSupplyDistributed,\r\n    countBunniesBurnt,\r\n    startBlockNumber,\r\n    endBlockNumber,\r\n  } = useContext(NftProviderContext)\r\n  const TranslateString = useI18n()\r\n  const currentBlock = useBlock()\r\n  const secondsRemaining = (endBlockNumber - currentBlock) * BSC_BLOCK_TIME\r\n  const timeLeft = formatTimePeriod(getTimePeriods(secondsRemaining), ['seconds'])\r\n  const totalBlocks = endBlockNumber - startBlockNumber\r\n  const progress = currentBlock > startBlockNumber ? ((currentBlock - startBlockNumber) / totalBlocks) * 100 : 5\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <ProgressWrap>\r\n          <Progress primaryStep={progress} />\r\n        </ProgressWrap>\r\n        <TimeLeft>\r\n          {timeLeft ? TranslateString(999, `${timeLeft} left to trade in NFTs`) : TranslateString(999, 'Finished!')}\r\n        </TimeLeft>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, \"Total NFT's claimed\")}:</Text>\r\n          <Text>\r\n            <strong>{!isInitialized ? '...' : `${currentDistributedSupply}/${totalSupplyDistributed}`}</strong>\r\n          </Text>\r\n        </InfoRow>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, \"Total NFT's burned\")}:</Text>\r\n          <Text>\r\n            <strong>{!isInitialized ? '...' : `${countBunniesBurnt}/${totalSupplyDistributed}`}</strong>\r\n          </Text>\r\n        </InfoRow>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Can be traded until')}:</Text>\r\n          <div>\r\n            {!isInitialized ? (\r\n              '...'\r\n            ) : (\r\n              <Link href={`https://bscscan.com/block/${endBlockNumber}`} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                {`Block ${endBlockNumber}`}\r\n                <OpenNewIcon color=\"primary\" ml=\"2px\" />\r\n              </Link>\r\n            )}{' '}\r\n          </div>\r\n        </InfoRow>\r\n        <Message>{TranslateString(999, 'NFTs can be traded in for CAKE until the above block height')}</Message>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftProgress\r\n"]},"metadata":{},"sourceType":"module"}