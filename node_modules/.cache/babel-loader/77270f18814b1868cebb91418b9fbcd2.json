{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import{Card,CardBody,Heading,Text}from'@pancakeswap-libs/uikit';import BigNumber from'bignumber.js/bignumber';import styled from'styled-components';import{getBalanceNumber}from'utils/formatBalance';import{useTotalSupply,useBurnedBalance}from'hooks/useTokenBalance';import useI18n from'hooks/useI18n';import{getCakeAddress}from'utils/addressHelpers';import CardValue from'./CardValue';import{useFarms,usePriceCakeBusd}from'../../../state/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCakeStats=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n\"])));var Row=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 14px;\\n  justify-content: space-between;\\n  margin-bottom: 8px;\\n\"])));var CakeStats2=function CakeStats2(){var TranslateString=useI18n();var totalSupply=useTotalSupply();var burnedBalance=useBurnedBalance(getCakeAddress());var farms=useFarms();var eggPrice=usePriceCakeBusd();var circSupply=totalSupply?totalSupply.minus(burnedBalance):new BigNumber(0);var cakeSupply=getBalanceNumber(circSupply);var marketCap=eggPrice.times(circSupply);var pastaPerBlock=0;if(farms&&farms[0]&&farms[0].pastaPerBlock){pastaPerBlock=new BigNumber(farms[0].pastaPerBlock).div(new BigNumber(10).pow(18)).toNumber();}return/*#__PURE__*/_jsx(StyledCakeStats,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:\"Flix Stats\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\"Total FLIX Supply\"}),cakeSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:cakeSupply,decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(999,'Market Cap')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(marketCap),decimals:0,prefix:\"$\"})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\" Total Flix Burned\"}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:getBalanceNumber(burnedBalance),decimals:0})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:\" New FLIX/block\"}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"14px\",children:pastaPerBlock})]})]})});};export default CakeStats2;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeStats2.tsx"],"names":["React","Card","CardBody","Heading","Text","BigNumber","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","useFarms","usePriceCakeBusd","StyledCakeStats","Row","div","CakeStats2","TranslateString","totalSupply","burnedBalance","farms","eggPrice","circSupply","minus","cakeSupply","marketCap","times","pastaPerBlock","pow","toNumber"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CakeStats2 = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const farms = useFarms();\r\n  const eggPrice = usePriceCakeBusd();\r\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\r\n  const cakeSupply = getBalanceNumber(circSupply);\r\n  const marketCap = eggPrice.times(circSupply);\r\n\r\n  let pastaPerBlock = 0;\r\n  if(farms && farms[0] && farms[0].pastaPerBlock){\r\n    pastaPerBlock = new BigNumber(farms[0].pastaPerBlock).div(new BigNumber(10).pow(18)).toNumber();\r\n  }\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          Flix Stats\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Total FLIX Supply</Text>\r\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(999, 'Market Cap')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"$\" />\r\n\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\"> Total Flix Burned</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\"> New FLIX/block</Text>\r\n          <Text bold fontSize=\"14px\">{pastaPerBlock}</Text>\r\n        </Row>\r\n      </CardBody>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats2\r\n"]},"metadata":{},"sourceType":"module"}