{"ast":null,"code":"var _jsxFileName = \"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/StatusCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport useI18n from 'hooks/useI18n';\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit';\nimport UnlockButton from 'components/UnlockButton';\nimport { NftProviderContext } from '../contexts/NftProvider';\nimport NoNftsToClaimCard from './NoNftsToClaimCard';\nimport YouWonCard from './YouWonCard';\nimport NftInWalletCard from './NftInWalletCard';\n/**\r\n * Possible states\r\n *\r\n * 1. Disconnected wallet\r\n * 2. No NFT's to claim\r\n * 3. You won an NFT\r\n * 4. NFT in wallet\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatusCard = () => {\n  _s();\n\n  const {\n    account\n  } = useWallet();\n  const {\n    isInitialized,\n    canClaim,\n    hasClaimed,\n    balanceOf\n  } = useContext(NftProviderContext);\n  const TranslateString = useI18n();\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      isActive: true,\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          mb: \"8px\",\n          children: TranslateString(999, 'Wallet Disconnected')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mb: \"16px\",\n          children: TranslateString(999, 'Connect to see if you have won an NFT!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UnlockButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isInitialized) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!hasClaimed && canClaim) {\n    return /*#__PURE__*/_jsxDEV(YouWonCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (balanceOf > 0) {\n    return /*#__PURE__*/_jsxDEV(NftInWalletCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NoNftsToClaimCard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StatusCard, \"qyWx4n5Igf3QTeP4Tv0nyc7yyJk=\", false, function () {\n  return [useWallet, useI18n];\n});\n\n_c = StatusCard;\nexport default StatusCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusCard\");","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/StatusCard.tsx"],"names":["React","useContext","useWallet","useI18n","Card","CardBody","Heading","Text","UnlockButton","NftProviderContext","NoNftsToClaimCard","YouWonCard","NftInWalletCard","StatusCard","account","isInitialized","canClaim","hasClaimed","balanceOf","TranslateString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,IAAlC,QAA8C,yBAA9C;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcZ,SAAS,EAA7B;AACA,QAAM;AAAEa,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,UAA3B;AAAuCC,IAAAA;AAAvC,MAAqDjB,UAAU,CAACQ,kBAAD,CAArE;AACA,QAAMU,eAAe,GAAGhB,OAAO,EAA/B;;AAEA,MAAI,CAACW,OAAL,EAAc;AACZ,wBACE,QAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,KAAZ;AAAA,oBAAmBK,eAAe,CAAC,GAAD,EAAM,qBAAN;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,MAAT;AAAA,oBAAiBA,eAAe,CAAC,GAAD,EAAM,wCAAN;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,MAAI,CAACJ,aAAL,EAAoB;AAClB,wBAAO,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACE,UAAD,IAAeD,QAAnB,EAA6B;AAC3B,wBAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIE,SAAS,GAAG,CAAhB,EAAmB;AACjB,wBAAO,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA9BD;;GAAML,U;UACgBX,S,EAEIC,O;;;KAHpBU,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { NftProviderContext } from '../contexts/NftProvider'\r\nimport NoNftsToClaimCard from './NoNftsToClaimCard'\r\nimport YouWonCard from './YouWonCard'\r\nimport NftInWalletCard from './NftInWalletCard'\r\n\r\n/**\r\n * Possible states\r\n *\r\n * 1. Disconnected wallet\r\n * 2. No NFT's to claim\r\n * 3. You won an NFT\r\n * 4. NFT in wallet\r\n */\r\nconst StatusCard = () => {\r\n  const { account } = useWallet()\r\n  const { isInitialized, canClaim, hasClaimed, balanceOf } = useContext(NftProviderContext)\r\n  const TranslateString = useI18n()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Card isActive>\r\n        <CardBody>\r\n          <Heading mb=\"8px\">{TranslateString(999, 'Wallet Disconnected')}</Heading>\r\n          <Text mb=\"16px\">{TranslateString(999, 'Connect to see if you have won an NFT!')}</Text>\r\n          <UnlockButton />\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <Text>...</Text>\r\n  }\r\n\r\n  if (!hasClaimed && canClaim) {\r\n    return <YouWonCard />\r\n  }\r\n\r\n  if (balanceOf > 0) {\r\n    return <NftInWalletCard />\r\n  }\r\n\r\n  return <NoNftsToClaimCard />\r\n}\r\n\r\nexport default StatusCard\r\n"]},"metadata":{},"sourceType":"module"}