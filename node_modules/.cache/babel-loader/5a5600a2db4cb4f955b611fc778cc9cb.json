{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/ivopascoal/Desktop/Naughty/naughty_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useState}from'react';import styled from'styled-components';import Web3 from'web3';import{useWallet}from'@binance-chain/bsc-use-wallet';import{Button,Input,Modal,Text}from'@pancakeswap-libs/uikit';import{PANCAKE_RABBITS_ADDRESS}from'config/constants/nfts';import useI18n from'hooks/useI18n';import{usePancakeRabbits}from'hooks/useContract';import InfoRow from'./InfoRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Value=styled(Text)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n\"])));var ModalContent=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var Actions=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  grid-gap: 8px;\\n\"])));var Label=styled.label(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  display: block;\\n  margin-bottom: 8px;\\n  margin-top: 24px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.text;});var TransferNftModal=function TransferNftModal(_ref2){var nft=_ref2.nft,tokenIds=_ref2.tokenIds,onSuccess=_ref2.onSuccess,onDismiss=_ref2.onDismiss;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var TranslateString=useI18n();var _useWallet=useWallet(),account=_useWallet.account;var pancakeRabbitsContract=usePancakeRabbits(PANCAKE_RABBITS_ADDRESS);var handleConfirm=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var isValidAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;isValidAddress=Web3.utils.isAddress(value);if(isValidAddress){_context.next=6;break;}setError(TranslateString(999,'Please enter a valid wallet address'));_context.next=8;break;case 6:_context.next=8;return pancakeRabbitsContract.methods.transferFrom(account,value,tokenIds[0]).send({from:account}).on('sending',function(){setIsLoading(true);}).on('receipt',function(){onDismiss();onSuccess();}).on('error',function(){console.error(error);setError('Unable to transfer NFT');setIsLoading(false);});case 8:_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error('Unable to transfer NFT:',_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function handleConfirm(){return _ref3.apply(this,arguments);};}();var handleChange=function handleChange(evt){var inputValue=evt.target.value;setValue(inputValue);};return/*#__PURE__*/_jsxs(Modal,{title:TranslateString(999,'Transfer NFT'),onDismiss:onDismiss,children:[/*#__PURE__*/_jsxs(ModalContent,{children:[error&&/*#__PURE__*/_jsx(Text,{color:\"failure\",mb:\"8px\",children:error}),/*#__PURE__*/_jsxs(InfoRow,{children:[/*#__PURE__*/_jsxs(Text,{children:[TranslateString(999,'Transferring'),\":\"]}),/*#__PURE__*/_jsx(Value,{children:\"1x \\\"\".concat(nft.name,\"\\\" NFT\")})]}),/*#__PURE__*/_jsxs(Label,{htmlFor:\"transferAddress\",children:[TranslateString(999,'Receiving address'),\":\"]}),/*#__PURE__*/_jsx(Input,{id:\"transferAddress\",name:\"address\",type:\"text\",placeholder:TranslateString(999,'Paste address'),value:value,onChange:handleChange,isWarning:error,disabled:isLoading})]}),/*#__PURE__*/_jsxs(Actions,{children:[/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"secondary\",onClick:onDismiss,children:TranslateString(462,'Cancel')}),/*#__PURE__*/_jsx(Button,{fullWidth:true,onClick:handleConfirm,disabled:!account||isLoading||!value,children:TranslateString(464,'Confirm')})]})]});};export default TransferNftModal;","map":{"version":3,"sources":["/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/TransferNftModal.tsx"],"names":["React","useState","styled","Web3","useWallet","Button","Input","Modal","Text","PANCAKE_RABBITS_ADDRESS","useI18n","usePancakeRabbits","InfoRow","Value","ModalContent","div","Actions","Label","label","theme","colors","text","TransferNftModal","nft","tokenIds","onSuccess","onDismiss","isLoading","setIsLoading","value","setValue","error","setError","TranslateString","account","pancakeRabbitsContract","handleConfirm","isValidAddress","utils","isAddress","methods","transferFrom","send","from","on","console","handleChange","evt","inputValue","target","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Web3 from 'web3'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Input, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport { PANCAKE_RABBITS_ADDRESS } from 'config/constants/nfts'\r\nimport { Nft } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\n\r\ninterface TransferNftModalProps {\r\n  nft: Nft\r\n  tokenIds: number[]\r\n  onSuccess: () => any\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst Label = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  margin-top: 24px;\r\n`\r\n\r\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const pancakeRabbitsContract = usePancakeRabbits(PANCAKE_RABBITS_ADDRESS)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const isValidAddress = Web3.utils.isAddress(value)\r\n\r\n      if (!isValidAddress) {\r\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\r\n      } else {\r\n        await pancakeRabbitsContract.methods\r\n          .transferFrom(account, value, tokenIds[0])\r\n          .send({ from: account })\r\n          .on('sending', () => {\r\n            setIsLoading(true)\r\n          })\r\n          .on('receipt', () => {\r\n            onDismiss()\r\n            onSuccess()\r\n          })\r\n          .on('error', () => {\r\n            console.error(error)\r\n            setError('Unable to transfer NFT')\r\n            setIsLoading(false)\r\n          })\r\n      }\r\n    } catch (err) {\r\n      console.error('Unable to transfer NFT:', err)\r\n    }\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(inputValue)\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\r\n        <Input\r\n          id=\"transferAddress\"\r\n          name=\"address\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(999, 'Paste address')}\r\n          value={value}\r\n          onChange={handleChange}\r\n          isWarning={error}\r\n          disabled={isLoading}\r\n        />\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !value}>\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransferNftModal\r\n"]},"metadata":{},"sourceType":"module"}