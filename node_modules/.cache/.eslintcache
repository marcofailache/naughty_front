[{"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/index.tsx":"1","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/App.tsx":"2","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/Providers.tsx":"3","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/style/Global.tsx":"4","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/PageLoader.tsx":"5","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/NotFound.tsx":"6","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Buy.tsx":"7","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftGlobalNotification.tsx":"8","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/hooks.ts":"9","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/index.ts":"10","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/index.ts":"11","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/index.ts":"12","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/index.ts":"13","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/index.ts":"14","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/index.ts":"15","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/index.ts":"16","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getRpcUrl.ts":"17","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/index.tsx":"18","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Menu/index.tsx":"19","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/ThemeContext.tsx":"20","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/BlockContext.tsx":"21","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/Localisation/languageContext.tsx":"22","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/RefreshContext.tsx":"23","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/layout/Page.tsx":"24","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/actions.ts":"25","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/index.ts":"26","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/types.ts":"27","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/addressHelpers.ts":"28","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/formatBalance.ts":"29","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Menu/config.ts":"30","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/Farms.tsx":"31","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/Lottery.tsx":"32","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/BuyNaughty.tsx":"33","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/Teaser.tsx":"34","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/Liquidity.tsx":"35","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/Home.tsx":"36","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/BuyNow.tsx":"37","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useTokenBalance.ts":"38","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useI18n.ts":"39","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/multicall.ts":"40","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/nfts.ts":"41","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/HowItWorks.tsx":"42","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftList.tsx":"43","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftInfo.tsx":"44","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/RegisterToWinPage.tsx":"45","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/contexts/NftProvider.tsx":"46","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/layout/Container.tsx":"47","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useRefresh.ts":"48","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/translateTextHelpers.ts":"49","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/Localisation/translationsContext.ts":"50","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useTheme.ts":"51","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/web3.ts":"52","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/localisation/languageCodes.ts":"53","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/StatusCard.tsx":"54","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftPreview.tsx":"55","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftGrid.tsx":"56","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftProgressSimple.tsx":"57","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftProgress.tsx":"58","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/FarmCard.tsx":"59","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/FarmCard.tsx":"60","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/TwitterCard.tsx":"61","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeStats2.tsx":"62","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeStats.tsx":"63","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/FarmStakingCard.tsx":"64","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/pools/index.ts":"65","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/farms/index.ts":"66","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/contracts.ts":"67","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/erc20.ts":"68","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftInWalletCard.tsx":"69","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/Image.tsx":"70","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/PleaseWaitCard.tsx":"71","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftCard/index.tsx":"72","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/YouWonCard.tsx":"73","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/InfoRow.tsx":"74","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/CardActionsContainer.tsx":"75","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/ApyButton.tsx":"76","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/CardHeading.tsx":"77","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/DetailsSection.tsx":"78","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useAllEarnings.ts":"79","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/NaughtyWalletBalance.tsx":"80","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeWalletBalance.tsx":"81","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeHarvestBalance.tsx":"82","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CardValue.tsx":"83","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/pools/fetchPoolsUser.ts":"84","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/pools/fetchPools.ts":"85","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/farms/fetchFarmUser.ts":"86","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/farms/fetchFarms.ts":"87","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/index.ts":"88","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/utils/contracts.ts":"89","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/CardContent.tsx":"90","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/TransferNftModal.tsx":"91","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/BurnNftModal.tsx":"92","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/ClaimNftModal.tsx":"93","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useHarvest.ts":"94","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useFarmsWithBalance.ts":"95","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/SecondaryCard.tsx":"96","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/HarvestAction.tsx":"97","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/ApyCalculatorModal.tsx":"98","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useNaughtyBalance.ts":"99","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/StakeAction.tsx":"100","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/UnlockButton.tsx":"101","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/pools.ts":"102","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/farms.ts":"103","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useApprove.ts":"104","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useContract.ts":"105","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getLiquidityUrlPathParts.ts":"106","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/ExpandableSectionButton/index.ts":"107","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useStake.ts":"108","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Tags.tsx":"109","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/ApyButton.tsx":"110","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/CardActionsContainer.tsx":"111","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/CardHeading.tsx":"112","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/DetailsSection.tsx":"113","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/WithdrawModal.tsx":"114","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/DepositModal.tsx":"115","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NoNftsToClaimCard.tsx":"116","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/index.ts":"117","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/callHelpers.ts":"118","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/compoundApyHelpers.ts":"119","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useUnstake.ts":"120","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx":"121","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/formatTimePeriod.ts":"122","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getTimePeriods.ts":"123","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useBlock.ts":"124","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/ApyCalculatorModal.tsx":"125","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/StakeAction.tsx":"126","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/HarvestAction.tsx":"127","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/ifo.ts":"128","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/WithdrawModal.tsx":"129","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/DepositModal.tsx":"130","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/TokenInput/index.ts":"131","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/ModalActions/index.ts":"132","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/TokenInput/TokenInput.tsx":"133","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/ModalActions/ModalActions.tsx":"134","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/NextDrawPage.tsx":"135","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/PastDrawsPage.tsx":"136","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Input/index.ts":"137","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Spacer/index.ts":"138","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/FarmCard.tsx":"139","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/FarmCard.tsx":"140","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/Hero.tsx":"141","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/Divider.tsx":"142","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/Divider.tsx":"143","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/FarmCard.tsx":"144","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useWeb3.ts":"145","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/lotteryUtils.js":"146","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/UnlockWalletCard.tsx":"147","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/WinningNumbers.tsx":"148","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/HowItWorks.tsx":"149","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Input/Input.tsx":"150","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Spacer/Spacer.tsx":"151","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx":"152","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/ApyButton.tsx":"153","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/CardHeading.tsx":"154","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/DetailsSection.tsx":"155","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/CardActionsContainer.tsx":"156","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/CardActionsContainer.tsx":"157","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/DetailsSection.tsx":"158","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/ApyButton.tsx":"159","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/CardHeading.tsx":"160","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/LotteryProgress.tsx":"161","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/PastLotteryDataContext.tsx":"162","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/layout/Flex.tsx":"163","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmTabButtons/index.tsx":"164","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/CardHeading.tsx":"165","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/CardActionsContainer.tsx":"166","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/DetailsSection.tsx":"167","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/ApyButton.tsx":"168","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useTickets.ts":"169","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/index.tsx":"170","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TotalPrizesCard/index.tsx":"171","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/YourPrizesCard/index.tsx":"172","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/index.tsx":"173","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastDrawsHistory/Legend.tsx":"174","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastDrawsHistory/HistoryChart.tsx":"175","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/helpers/CountdownHelpers.ts":"176","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/StakeAction.tsx":"177","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/ApyCalculatorModal.tsx":"178","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/HarvestAction.tsx":"179","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/ApyCalculatorModal.tsx":"180","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/HarvestAction.tsx":"181","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/StakeAction.tsx":"182","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/HarvestAction.tsx":"183","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/StakeAction.tsx":"184","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx":"185","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useGetLotteryHasDrawn.ts":"186","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useTimer.ts":"187","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/Loading.tsx":"188","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/hooks/useGetRecentLotteryRoundData.ts":"189","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PrizeGrid.tsx":"190","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx":"191","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx":"192","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx":"193","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/TicketActions.tsx":"194","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx":"195","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastDrawsHistory/LineChartWrapper.tsx":"196","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/DepositModal.tsx":"197","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/WithdrawModal.tsx":"198","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/WithdrawModal.tsx":"199","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/DepositModal.tsx":"200","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/DepositModal.tsx":"201","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/WithdrawModal.tsx":"202","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getLotteryRoundData.ts":"203","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx":"204","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/UserTicketsModal.tsx":"205","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/PurchaseWarningModal.tsx":"206","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx":"207","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/BuyTicketModal.tsx":"208","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useAllowance.ts":"209","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useBuyLottery.ts":"210","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx":"211","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/LotteryCardHeading.tsx":"212","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/Timestamp.tsx":"213","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/helpers/formatLotteryDate.ts":"214","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/TicketInput/index.ts":"215","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/TicketInput/TicketInput.tsx":"216"},{"size":278,"mtime":1621191607000,"results":"217","hashOfConfig":"218"},{"size":3407,"mtime":1621694283010,"results":"219","hashOfConfig":"218"},{"size":1393,"mtime":1621191607000,"results":"220","hashOfConfig":"218"},{"size":710,"mtime":1621525424003,"results":"221","hashOfConfig":"218"},{"size":397,"mtime":1621191607000,"results":"222","hashOfConfig":"218"},{"size":856,"mtime":1621191607000,"results":"223","hashOfConfig":"218"},{"size":1113,"mtime":1621350586516,"results":"224","hashOfConfig":"218"},{"size":2937,"mtime":1621191607000,"results":"225","hashOfConfig":"218"},{"size":3794,"mtime":1621550298806,"results":"226","hashOfConfig":"218"},{"size":35,"mtime":1621191607000,"results":"227","hashOfConfig":"218"},{"size":37,"mtime":1621191607000,"results":"228","hashOfConfig":"218"},{"size":40,"mtime":1621694284936,"results":"229","hashOfConfig":"218"},{"size":34,"mtime":1621191607000,"results":"230","hashOfConfig":"218"},{"size":36,"mtime":1621075094000,"results":"231","hashOfConfig":"218"},{"size":39,"mtime":1621075094000,"results":"232","hashOfConfig":"218"},{"size":36,"mtime":1621351330017,"results":"233","hashOfConfig":"218"},{"size":329,"mtime":1621191607000,"results":"234","hashOfConfig":"218"},{"size":1561,"mtime":1621516531813,"results":"235","hashOfConfig":"218"},{"size":1201,"mtime":1621566840837,"results":"236","hashOfConfig":"218"},{"size":938,"mtime":1621549744959,"results":"237","hashOfConfig":"218"},{"size":772,"mtime":1621191607000,"results":"238","hashOfConfig":"218"},{"size":3233,"mtime":1621191607000,"results":"239","hashOfConfig":"218"},{"size":942,"mtime":1621191607000,"results":"240","hashOfConfig":"218"},{"size":426,"mtime":1621191607000,"results":"241","hashOfConfig":"218"},{"size":265,"mtime":1621191607000,"results":"242","hashOfConfig":"218"},{"size":286,"mtime":1621191607000,"results":"243","hashOfConfig":"218"},{"size":1796,"mtime":1621354046336,"results":"244","hashOfConfig":"218"},{"size":682,"mtime":1621383405834,"results":"245","hashOfConfig":"218"},{"size":400,"mtime":1621191607000,"results":"246","hashOfConfig":"218"},{"size":1483,"mtime":1621695527527,"results":"247","hashOfConfig":"218"},{"size":6027,"mtime":1621594374322,"results":"248","hashOfConfig":"218"},{"size":2704,"mtime":1621191607000,"results":"249","hashOfConfig":"218"},{"size":4342,"mtime":1621694168181,"results":"250","hashOfConfig":"218"},{"size":4895,"mtime":1621439212597,"results":"251","hashOfConfig":"218"},{"size":4378,"mtime":1621563141404,"results":"252","hashOfConfig":"218"},{"size":2053,"mtime":1621633826984,"results":"253","hashOfConfig":"218"},{"size":4297,"mtime":1621694222670,"results":"254","hashOfConfig":"218"},{"size":2002,"mtime":1621547753941,"results":"255","hashOfConfig":"218"},{"size":566,"mtime":1621191607000,"results":"256","hashOfConfig":"218"},{"size":964,"mtime":1621191607000,"results":"257","hashOfConfig":"218"},{"size":966,"mtime":1621535043701,"results":"258","hashOfConfig":"218"},{"size":1773,"mtime":1621516729616,"results":"259","hashOfConfig":"218"},{"size":417,"mtime":1621191607000,"results":"260","hashOfConfig":"218"},{"size":792,"mtime":1621448511684,"results":"261","hashOfConfig":"218"},{"size":1851,"mtime":1621516863967,"results":"262","hashOfConfig":"218"},{"size":6803,"mtime":1621191607000,"results":"263","hashOfConfig":"218"},{"size":320,"mtime":1621191607000,"results":"264","hashOfConfig":"218"},{"size":260,"mtime":1621191607000,"results":"265","hashOfConfig":"218"},{"size":1614,"mtime":1621191607000,"results":"266","hashOfConfig":"218"},{"size":404,"mtime":1621191607000,"results":"267","hashOfConfig":"218"},{"size":371,"mtime":1621549748137,"results":"268","hashOfConfig":"218"},{"size":770,"mtime":1621191607000,"results":"269","hashOfConfig":"218"},{"size":2059,"mtime":1621191607000,"results":"270","hashOfConfig":"218"},{"size":1387,"mtime":1621516651359,"results":"271","hashOfConfig":"218"},{"size":845,"mtime":1621191607000,"results":"272","hashOfConfig":"218"},{"size":338,"mtime":1621191607000,"results":"273","hashOfConfig":"218"},{"size":1085,"mtime":1621191607000,"results":"274","hashOfConfig":"218"},{"size":2994,"mtime":1621191607000,"results":"275","hashOfConfig":"218"},{"size":6537,"mtime":1621075094000,"results":"276","hashOfConfig":"218"},{"size":6537,"mtime":1621075094000,"results":"277","hashOfConfig":"218"},{"size":1358,"mtime":1621354831192,"results":"278","hashOfConfig":"218"},{"size":2303,"mtime":1621568999457,"results":"279","hashOfConfig":"218"},{"size":2127,"mtime":1621548844543,"results":"280","hashOfConfig":"218"},{"size":4260,"mtime":1621556229762,"results":"281","hashOfConfig":"218"},{"size":3825,"mtime":1621191607000,"results":"282","hashOfConfig":"218"},{"size":2133,"mtime":1621191607000,"results":"283","hashOfConfig":"218"},{"size":773,"mtime":1621614996733,"results":"284","hashOfConfig":"218"},{"size":1105,"mtime":1621191607000,"results":"285","hashOfConfig":"218"},{"size":638,"mtime":1621191607000,"results":"286","hashOfConfig":"218"},{"size":942,"mtime":1621191607000,"results":"287","hashOfConfig":"218"},{"size":635,"mtime":1621191607000,"results":"288","hashOfConfig":"218"},{"size":6038,"mtime":1621449307271,"results":"289","hashOfConfig":"218"},{"size":600,"mtime":1621446612206,"results":"290","hashOfConfig":"218"},{"size":177,"mtime":1621191607000,"results":"291","hashOfConfig":"218"},{"size":3228,"mtime":1621075094000,"results":"292","hashOfConfig":"218"},{"size":1051,"mtime":1621075094000,"results":"293","hashOfConfig":"218"},{"size":1336,"mtime":1621075094000,"results":"294","hashOfConfig":"218"},{"size":2194,"mtime":1621075094000,"results":"295","hashOfConfig":"218"},{"size":998,"mtime":1621537578609,"results":"296","hashOfConfig":"218"},{"size":767,"mtime":1621553427476,"results":"297","hashOfConfig":"218"},{"size":765,"mtime":1621552823465,"results":"298","hashOfConfig":"218"},{"size":692,"mtime":1621554869316,"results":"299","hashOfConfig":"218"},{"size":871,"mtime":1621191607000,"results":"300","hashOfConfig":"218"},{"size":3486,"mtime":1621537585623,"results":"301","hashOfConfig":"218"},{"size":2433,"mtime":1621191607000,"results":"302","hashOfConfig":"218"},{"size":2534,"mtime":1621537591640,"results":"303","hashOfConfig":"218"},{"size":4597,"mtime":1621537680907,"results":"304","hashOfConfig":"218"},{"size":295,"mtime":1621571301523,"results":"305","hashOfConfig":"218"},{"size":979,"mtime":1621191607000,"results":"306","hashOfConfig":"218"},{"size":504,"mtime":1621514367636,"results":"307","hashOfConfig":"218"},{"size":3502,"mtime":1621191607000,"results":"308","hashOfConfig":"218"},{"size":3398,"mtime":1621191607000,"results":"309","hashOfConfig":"218"},{"size":2931,"mtime":1621191607000,"results":"310","hashOfConfig":"218"},{"size":2055,"mtime":1621191607000,"results":"311","hashOfConfig":"218"},{"size":1336,"mtime":1621537573732,"results":"312","hashOfConfig":"218"},{"size":295,"mtime":1621191607000,"results":"313","hashOfConfig":"218"},{"size":2040,"mtime":1621075094000,"results":"314","hashOfConfig":"218"},{"size":4733,"mtime":1621075094000,"results":"315","hashOfConfig":"218"},{"size":2005,"mtime":1621547934729,"results":"316","hashOfConfig":"218"},{"size":2146,"mtime":1621075094000,"results":"317","hashOfConfig":"218"},{"size":545,"mtime":1621191607000,"results":"318","hashOfConfig":"218"},{"size":1207,"mtime":1621522772104,"results":"319","hashOfConfig":"218"},{"size":1644,"mtime":1621620418232,"results":"320","hashOfConfig":"218"},{"size":2535,"mtime":1621191607000,"results":"321","hashOfConfig":"218"},{"size":2834,"mtime":1621191607000,"results":"322","hashOfConfig":"218"},{"size":584,"mtime":1621191607000,"results":"323","hashOfConfig":"218"},{"size":53,"mtime":1621191607000,"results":"324","hashOfConfig":"218"},{"size":1690,"mtime":1621191607000,"results":"325","hashOfConfig":"218"},{"size":819,"mtime":1621191607000,"results":"326","hashOfConfig":"218"},{"size":1051,"mtime":1621075094000,"results":"327","hashOfConfig":"218"},{"size":3228,"mtime":1621075094000,"results":"328","hashOfConfig":"218"},{"size":1336,"mtime":1621075094000,"results":"329","hashOfConfig":"218"},{"size":2194,"mtime":1621075094000,"results":"330","hashOfConfig":"218"},{"size":1914,"mtime":1621075094000,"results":"331","hashOfConfig":"218"},{"size":2023,"mtime":1621075094000,"results":"332","hashOfConfig":"218"},{"size":682,"mtime":1621448244326,"results":"333","hashOfConfig":"218"},{"size":279,"mtime":1621191607000,"results":"334","hashOfConfig":"218"},{"size":3448,"mtime":1621570806867,"results":"335","hashOfConfig":"218"},{"size":1316,"mtime":1621191607000,"results":"336","hashOfConfig":"218"},{"size":2033,"mtime":1621191607000,"results":"337","hashOfConfig":"218"},{"size":938,"mtime":1621191607000,"results":"338","hashOfConfig":"218"},{"size":588,"mtime":1621191607000,"results":"339","hashOfConfig":"218"},{"size":1290,"mtime":1621191607000,"results":"340","hashOfConfig":"218"},{"size":214,"mtime":1621191607000,"results":"341","hashOfConfig":"218"},{"size":4733,"mtime":1621075094000,"results":"342","hashOfConfig":"218"},{"size":2146,"mtime":1621075094000,"results":"343","hashOfConfig":"218"},{"size":2040,"mtime":1621075094000,"results":"344","hashOfConfig":"218"},{"size":4693,"mtime":1621191607000,"results":"345","hashOfConfig":"218"},{"size":1914,"mtime":1621075094000,"results":"346","hashOfConfig":"218"},{"size":2023,"mtime":1621075094000,"results":"347","hashOfConfig":"218"},{"size":40,"mtime":1621191607000,"results":"348","hashOfConfig":"218"},{"size":42,"mtime":1621191607000,"results":"349","hashOfConfig":"218"},{"size":2084,"mtime":1621191607000,"results":"350","hashOfConfig":"218"},{"size":797,"mtime":1621191607000,"results":"351","hashOfConfig":"218"},{"size":1874,"mtime":1621191607000,"results":"352","hashOfConfig":"218"},{"size":1243,"mtime":1621191607000,"results":"353","hashOfConfig":"218"},{"size":78,"mtime":1621191607000,"results":"354","hashOfConfig":"218"},{"size":36,"mtime":1621191607000,"results":"355","hashOfConfig":"218"},{"size":6537,"mtime":1621075094000,"results":"356","hashOfConfig":"218"},{"size":6537,"mtime":1621075094000,"results":"357","hashOfConfig":"218"},{"size":1989,"mtime":1621381030532,"results":"358","hashOfConfig":"218"},{"size":193,"mtime":1621191607000,"results":"359","hashOfConfig":"218"},{"size":193,"mtime":1621191607000,"results":"360","hashOfConfig":"218"},{"size":6296,"mtime":1621448905957,"results":"361","hashOfConfig":"218"},{"size":1023,"mtime":1621191607000,"results":"362","hashOfConfig":"218"},{"size":7687,"mtime":1621191607000,"results":"363","hashOfConfig":"218"},{"size":1011,"mtime":1621191607000,"results":"364","hashOfConfig":"218"},{"size":6312,"mtime":1621191607000,"results":"365","hashOfConfig":"218"},{"size":1079,"mtime":1621368112128,"results":"366","hashOfConfig":"218"},{"size":1164,"mtime":1621191607000,"results":"367","hashOfConfig":"218"},{"size":722,"mtime":1621191607000,"results":"368","hashOfConfig":"218"},{"size":533,"mtime":1621191607000,"results":"369","hashOfConfig":"218"},{"size":1051,"mtime":1621075094000,"results":"370","hashOfConfig":"218"},{"size":1336,"mtime":1621075094000,"results":"371","hashOfConfig":"218"},{"size":2194,"mtime":1621075094000,"results":"372","hashOfConfig":"218"},{"size":3228,"mtime":1621075094000,"results":"373","hashOfConfig":"218"},{"size":3228,"mtime":1621075094000,"results":"374","hashOfConfig":"218"},{"size":2194,"mtime":1621075094000,"results":"375","hashOfConfig":"218"},{"size":1051,"mtime":1621075094000,"results":"376","hashOfConfig":"218"},{"size":1336,"mtime":1621075094000,"results":"377","hashOfConfig":"218"},{"size":1459,"mtime":1621191607000,"results":"378","hashOfConfig":"218"},{"size":335,"mtime":1621191607000,"results":"379","hashOfConfig":"218"},{"size":298,"mtime":1621191607000,"results":"380","hashOfConfig":"218"},{"size":1626,"mtime":1621359307842,"results":"381","hashOfConfig":"218"},{"size":1336,"mtime":1621191607000,"results":"382","hashOfConfig":"218"},{"size":3229,"mtime":1621447917480,"results":"383","hashOfConfig":"218"},{"size":2225,"mtime":1621444606079,"results":"384","hashOfConfig":"218"},{"size":1051,"mtime":1621191607000,"results":"385","hashOfConfig":"218"},{"size":3351,"mtime":1621191607000,"results":"386","hashOfConfig":"218"},{"size":2280,"mtime":1621191607000,"results":"387","hashOfConfig":"218"},{"size":3056,"mtime":1621191607000,"results":"388","hashOfConfig":"218"},{"size":1148,"mtime":1621191607000,"results":"389","hashOfConfig":"218"},{"size":2841,"mtime":1621191607000,"results":"390","hashOfConfig":"218"},{"size":959,"mtime":1621191607000,"results":"391","hashOfConfig":"218"},{"size":2913,"mtime":1621191607000,"results":"392","hashOfConfig":"218"},{"size":2640,"mtime":1621191607000,"results":"393","hashOfConfig":"218"},{"size":2146,"mtime":1621075094000,"results":"394","hashOfConfig":"218"},{"size":4733,"mtime":1621075094000,"results":"395","hashOfConfig":"218"},{"size":2040,"mtime":1621075094000,"results":"396","hashOfConfig":"218"},{"size":4733,"mtime":1621075094000,"results":"397","hashOfConfig":"218"},{"size":2040,"mtime":1621075094000,"results":"398","hashOfConfig":"218"},{"size":2146,"mtime":1621075094000,"results":"399","hashOfConfig":"218"},{"size":1975,"mtime":1621618740060,"results":"400","hashOfConfig":"218"},{"size":2146,"mtime":1621191607000,"results":"401","hashOfConfig":"218"},{"size":4734,"mtime":1621528957835,"results":"402","hashOfConfig":"218"},{"size":847,"mtime":1621191607000,"results":"403","hashOfConfig":"218"},{"size":447,"mtime":1621191607000,"results":"404","hashOfConfig":"218"},{"size":705,"mtime":1621191607000,"results":"405","hashOfConfig":"218"},{"size":1232,"mtime":1621191607000,"results":"406","hashOfConfig":"218"},{"size":3826,"mtime":1621191607000,"results":"407","hashOfConfig":"218"},{"size":2820,"mtime":1621191607000,"results":"408","hashOfConfig":"218"},{"size":1344,"mtime":1621191607000,"results":"409","hashOfConfig":"218"},{"size":1935,"mtime":1621191607000,"results":"410","hashOfConfig":"218"},{"size":3068,"mtime":1621191607000,"results":"411","hashOfConfig":"218"},{"size":574,"mtime":1621191607000,"results":"412","hashOfConfig":"218"},{"size":63,"mtime":1621191607000,"results":"413","hashOfConfig":"218"},{"size":2023,"mtime":1621075094000,"results":"414","hashOfConfig":"218"},{"size":1914,"mtime":1621075094000,"results":"415","hashOfConfig":"218"},{"size":1914,"mtime":1621075094000,"results":"416","hashOfConfig":"218"},{"size":2023,"mtime":1621075094000,"results":"417","hashOfConfig":"218"},{"size":2023,"mtime":1621191607000,"results":"418","hashOfConfig":"218"},{"size":1914,"mtime":1621191607000,"results":"419","hashOfConfig":"218"},{"size":799,"mtime":1621191607000,"results":"420","hashOfConfig":"218"},{"size":325,"mtime":1621191607000,"results":"421","hashOfConfig":"218"},{"size":2018,"mtime":1621191607000,"results":"422","hashOfConfig":"218"},{"size":1357,"mtime":1621191607000,"results":"423","hashOfConfig":"218"},{"size":2384,"mtime":1621191607000,"results":"424","hashOfConfig":"218"},{"size":4256,"mtime":1621191607000,"results":"425","hashOfConfig":"218"},{"size":1627,"mtime":1621191607000,"results":"426","hashOfConfig":"218"},{"size":1608,"mtime":1621191607000,"results":"427","hashOfConfig":"218"},{"size":1643,"mtime":1621191607000,"results":"428","hashOfConfig":"218"},{"size":948,"mtime":1621191607000,"results":"429","hashOfConfig":"218"},{"size":528,"mtime":1621191607000,"results":"430","hashOfConfig":"218"},{"size":359,"mtime":1621191607000,"results":"431","hashOfConfig":"218"},{"size":41,"mtime":1621191607000,"results":"432","hashOfConfig":"218"},{"size":1774,"mtime":1621191607000,"results":"433","hashOfConfig":"218"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jvzxe5",{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/index.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/App.tsx",["899"],"import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\nconst Buy = lazy(() => import('./views/Buy'))\r\nconst BuyNow = lazy(() => import('./views/BuyNow'))\r\nconst BuyNaughty = lazy(() => import('./views/BuyNaughty'))\r\nconst Teaser = lazy(() => import('./views/Teaser'))\r\nconst Liquidity = lazy(() => import('./views/Liquidity'))\r\n// const Pools = lazy(() => import('./views/Pools'))\r\n// const Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Nft = lazy(() => import('./views/Nft'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { account, connect } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('accountStatus')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Farms tokenMode/>\r\n            </Route>\r\n            {/* <Route path=\"/pools\"> */}\r\n            {/*  <Pools /> */}\r\n            {/* </Route> */}\r\n            <Route path=\"/lottery\"> \r\n              <Lottery />\r\n           </Route> \r\n           <Route path=\"/buy\">\r\n             <Buy />\r\n            </Route>\r\n            <Route path=\"/liquidity\">\r\n             <Liquidity />\r\n            </Route>\r\n             <Route path=\"/buynow\">\r\n             <BuyNow />\r\n            </Route>\r\n            <Route path=\"/buynaughty\">\r\n             <BuyNaughty />\r\n            </Route>\r\n            \r\n             <Route path=\"/nft\"> \r\n             <Nft /> \r\n            </Route> \r\n            <Route path=\"/teaser\"> \r\n             <Teaser /> \r\n            </Route> \r\n            {/* <Route path=\"/ifo\"> */}\r\n            {/*  <Ifos /> */}\r\n            {/* </Route> */}\r\n           \r\n            {/* Redirect */}\r\n            {/* <Route path=\"/staking\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/syrup\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n      <NftGlobalNotification />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/Providers.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/style/Global.tsx",["900"],"import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme,ResetCSS } from '@pancakeswap-libs/uikit'\r\n\r\n\r\n\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n  \r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    @font-face {\r\n    font-family: 'MyWebFont';\r\n    src: url('Font.ttf') format('truetype');\r\n\r\n  }\r\n\r\n  * {\r\n    font-family: 'MyWebFont';\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/PageLoader.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/NotFound.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Buy.tsx",["901","902","903","904","905","906"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Text, LogoIcon, LinkExternal, Link } from '@pancakeswap-libs/uikit'\r\nimport Page from 'components/layout/Page'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst StyledNotFound = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 64px);\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: heavy;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst NotFound = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Page>\r\n      <StyledNotFound>\r\n        <LogoIcon width=\"64px\" mb=\"8px\" />\r\n        <LinkExternal href='https://quickswap.exchange/#/swap?inputCurrency=0xf4b0903774532aee5ee567c02aab681a81539e92'>BUY Naughty!</LinkExternal>\r\n      </StyledNotFound>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftGlobalNotification.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/hooks.ts",["907","908"],"import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\nexport const usePriceNaughtyBusd = (): BigNumber => {\n  const pid = 0; // Naughty-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\nexport const usePriceNaughtyBnB = (): BigNumber => {\n  const pid = 0; // Naughty-BNB LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 0; // Flix-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\nexport const usePriceCakeBNB = (): BigNumber => {\n  \n  const pid = 1; // Flix-BNB LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n\n    }\n  }\n  return value;\n}","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getRpcUrl.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/index.tsx",["909"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport HowItWorks from './components/HowItWorks'\r\nimport NftList from './components/NftList'\r\nimport NftProvider from './contexts/NftProvider'\r\nimport NftInfo from './components/NftInfo'\r\nimport Register from './RegisterToWinPage'\r\nimport { getNGHTYAddress } from '../../utils/addressHelpers'\r\nimport useTokenBalance from '../../hooks/useTokenBalance'\r\nimport { getBalanceNumber } from '../../utils/formatBalance'\r\n\r\nconst StyledHero = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst Nft = () => {\r\n  const TranslateString = useI18n()\r\n  const cakeBalance = getBalanceNumber(useTokenBalance(getNGHTYAddress()))\r\n  let show\r\n\r\n  if(cakeBalance < 35000000000000000){\r\n\r\n    show = <Register />\r\n  }\r\n  else{\r\n    show = <StyledHero><NftInfo /> <NftList /> <HowItWorks /></StyledHero>\r\n       \r\n        \r\n       \r\n  }\r\n \r\n\r\n  return (\r\n    <NftProvider>\r\n      <Page>\r\n        <StyledHero>\r\n          <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n            Naughty NFT videos \r\n          </Heading>\r\n          <Heading as=\"h2\" size=\"lg\" color=\"secondary\">\r\n            The most exclusive adult NFTs only for TOP Naughty holders\r\n          </Heading>\r\n          </StyledHero>\r\n       {show}\r\n      </Page>\r\n    </NftProvider>\r\n  )\r\n}\r\n\r\nexport default Nft\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Menu/index.tsx",["910"],"import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd, usePriceCakeBNB} from 'state/hooks'\r\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account, connect, reset } = useWallet()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const cakePriceBNB = usePriceCakeBNB()\r\n\r\n  return (\r\n   \r\n    <UikitMenu\r\n      account={account}\r\n      login={connect}\r\n      logout={reset}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      \r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config}\r\n      priceLink=\"https://bscscan.com/token/\"\r\n      {...props}\r\n    />\r\n   \r\n  )\r\n}\r\n\r\nexport default Menu\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/ThemeContext.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/BlockContext.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/Localisation/languageContext.tsx",["911","912"],"import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then(r=>r.json())\r\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error(\"ERROR\");\r\n          console.error(e);\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/RefreshContext.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/layout/Page.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/actions.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/types.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/addressHelpers.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/formatBalance.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Menu/config.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/Farms.tsx",["913","914","915","916","917","918"],"import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  console.log(account)\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  console.log(farmsLP)\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  \n  const pastaOnlyFarms = activeFarms.filter(\n    (farm) => farm.lpSymbol.startsWith(\"NGTHY\"),\n\n  )\n  const busdOnlyFarms = activeFarms.filter(\n    (farm) => farm.lpSymbol.includes(\"BUSD\") \n  )\n\n  const bnbOnlyFarms = activeFarms.filter(\n    (farm) => farm.lpSymbol.includes(\"BNB\") \n  )\n\n  const stakedBusdOnlyFarms = busdOnlyFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  const stakedBnbOnlyFarms = bnbOnlyFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  const stakedPastaOnlyFarms = pastaOnlyFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  \n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n               const cakeRewardPerBlock = new BigNumber(farm.pastaPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        const cakeRewardPerMonth = cakeRewardPerYear.div(12)\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n        if (farm.quoteTokenSymbol === QuoteToken.NGTHY) {\n          apy = cakePrice.times(cakeRewardPerMonth);\n        }\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n// stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}\n// pastaOnly={pastOnly} setPastaOnly={setPastaOnly}\n\n  return (\n    <Page>\n      <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        { \n          tokenMode ?\n            'Dont waist your Naughty to watch the videos Stake tokens to earn NGTHY'\n            :\n          'Stake your LP tokens to earn NGTHY'\n        }\n      </Heading>\n      <Heading as=\"h2\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        Dont waist your Naughty to watch the videos\n      </Heading>\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly}/>\n      <div>\n        <Divider />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/ngthy`}>\n          {stakedOnly ? farmsList(stakedPastaOnlyFarms, false) : farmsList(pastaOnlyFarms, false)}\n          </Route>\n          <Route exact path={`${path}/busd`}>\n            {stakedOnly ? farmsList(stakedBusdOnlyFarms, false) : farmsList(busdOnlyFarms, false)}\n          </Route>\n          <Route exact path={`${path}/bnb`}>\n            {stakedOnly ? farmsList(stakedBnbOnlyFarms, false) : farmsList(bnbOnlyFarms, false)}\n          </Route>\n        </FlexLayout>\n      </div>\n      <Image src=\"/images/egg/8.png\" alt=\"illustration\" width={1352} height={587} responsive />\n    </Page>\n  )\n}\n\nexport default Farms\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/Lottery.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/BuyNaughty.tsx",["919","920","921","922","923","924","925","926","927","928","929","930","931","932","933"],"import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nexport interface FarmsProps{\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const {tokenMode} = farmsProps;\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => { \r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid !== 8)\r\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid !== 8)\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      // let userTotalTVL = new BigNumber(0);\r\n      // let userAllowance = 0;\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.gajPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        // if (farm.userData) {\r\n        //   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\r\n        //   userTotalTVL = userTotalTVL.plus(userShare)\r\n        //   const userWL = Whitelist.find(add => add.wallet === account);\r\n        //   userAllowance = userWL.allowance\r\n        // }\r\n\r\n        let apy = cakePrice.times(cakeRewardPerYear);\r\n\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice);\r\n        }\r\n\r\n        if(totalValue.comparedTo(0) > 0){\r\n          apy = apy.div(totalValue);\r\n        }\r\n\r\n        return { ...farm, apy }\r\n      })\r\n      return farmsToDisplayWithAPY.map((farm) => (\r\n        <FarmCard\r\n          key={farm.pid}\r\n          farm={farm}\r\n          removed={removed}\r\n          bnbPrice={bnbPrice}\r\n          cakePrice={cakePrice}\r\n          ethereum={ethereum}\r\n          account={account}\r\n        />\r\n      ))\r\n    },\r\n    [bnbPrice, account, cakePrice, ethereum],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <iframe src=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x2e291e1c9f85a86d0c58ae15621aac005a8b2ead\" title=\"BUY Naughty\" height='700px' width=\"100%\"/>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/Teaser.tsx",["934","935","936","937","938","939","940","941","942","943","944","945","946","947"],"import React, { useEffect, useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nexport interface FarmsProps{\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const {tokenMode} = farmsProps;\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => { \r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid !== 8)\r\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid !== 8)\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const Hero = styled.div`\r\n  align-items: center;\r\n  background-image: url('/images/egg/3ba.svg');\r\n  background-repeat: no-repeat;\r\n  background-position: top center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n  padding-top: 116px;\r\n  text-align: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    background-image: url('/images/egg/3.png');\r\n    background-position: left center, right center;\r\n    height: 165px;\r\n    padding-top: 0;\r\n  }\r\n  `\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      // let userTotalTVL = new BigNumber(0);\r\n      // let userAllowance = 0;\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.gajPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        // if (farm.userData) {\r\n        //   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\r\n        //   userTotalTVL = userTotalTVL.plus(userShare)\r\n        //   const userWL = Whitelist.find(add => add.wallet === account);\r\n        //   userAllowance = userWL.allowance\r\n        // }\r\n\r\n        let apy = cakePrice.times(cakeRewardPerYear);\r\n\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice);\r\n        }\r\n\r\n        if(totalValue.comparedTo(0) > 0){\r\n          apy = apy.div(totalValue);\r\n        }\r\n\r\n        return { ...farm, apy }\r\n      })\r\n      return farmsToDisplayWithAPY.map((farm) => (\r\n        <FarmCard\r\n          key={farm.pid}\r\n          farm={farm}\r\n          removed={removed}\r\n          bnbPrice={bnbPrice}\r\n          cakePrice={cakePrice}\r\n          ethereum={ethereum}\r\n          account={account}\r\n        />\r\n      ))\r\n    },\r\n    [bnbPrice, account, cakePrice, ethereum],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\r\n          💋 Cumming Soon...💦💦\r\n        </Heading>\r\n      </Hero>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/Liquidity.tsx",["948","949","950","951","952","953","954","955","956","957","958","959","960","961","962"],"import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nexport interface FarmsProps{\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const {tokenMode} = farmsProps;\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => { \r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid !== 8)\r\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid !== 8)\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      // let userTotalTVL = new BigNumber(0);\r\n      // let userAllowance = 0;\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.gajPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        // if (farm.userData) {\r\n        //   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\r\n        //   userTotalTVL = userTotalTVL.plus(userShare)\r\n        //   const userWL = Whitelist.find(add => add.wallet === account);\r\n        //   userAllowance = userWL.allowance\r\n        // }\r\n\r\n        let apy = cakePrice.times(cakeRewardPerYear);\r\n\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice);\r\n        }\r\n\r\n        if(totalValue.comparedTo(0) > 0){\r\n          apy = apy.div(totalValue);\r\n        }\r\n\r\n        return { ...farm, apy }\r\n      })\r\n      return farmsToDisplayWithAPY.map((farm) => (\r\n        <FarmCard\r\n          key={farm.pid}\r\n          farm={farm}\r\n          removed={removed}\r\n          bnbPrice={bnbPrice}\r\n          cakePrice={cakePrice}\r\n          ethereum={ethereum}\r\n          account={account}\r\n        />\r\n      ))\r\n    },\r\n    [bnbPrice, account, cakePrice, ethereum],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <iframe src=\"https://exchange.pancakeswap.finance/#/add/0xcF225F8961839CD587211DEE112cb2622f9227D7/0xe9e7cea3dedca5984780bafc599bd69add087d56\" title=\"Add Liquidity to GAJ\" height='700px' width=\"100%\"/>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/Home.tsx",["963","964","965"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport FarmStakingCard from './components/FarmStakingCard'\r\nimport LotteryCard from './components/LotteryCard'\r\nimport CakeStats from './components/CakeStats'\r\nimport CakeStats2 from './components/CakeStats2'\r\nimport TotalValueLockedCard from './components/TotalValueLockedCard'\r\nimport TwitterCard from './components/TwitterCard'\r\n\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  background-image: url('/images/egg/3.png');\r\n  background-repeat: no-repeat;\r\n  background-position: top center;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n  padding-top: 116px;\r\n  text-align: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    background-image: url('/images/egg/3.png'), url('/images/egg/3b.gif');\r\n    background-position: left center, right center;\r\n    height: 165px;\r\n    padding-top: 0;\r\n  }\r\n`\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 48px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\r\n          Naughty Finance\r\n        </Heading>\r\n        <Text>The only token that rewards holders with </Text>\r\n        <Text> exclusive video content.</Text>\r\n      </Hero>\r\n      <div>\r\n        <Cards>\r\n          <FarmStakingCard />\r\n          <TwitterCard/>\r\n          <CakeStats />\r\n          <CakeStats2 />\r\n        </Cards>\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/BuyNow.tsx",["966","967","968","969","970","971","972","973","974","975","976","977","978","979","980"],"import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nexport interface FarmsProps{\r\n  tokenMode?: boolean\r\n}\r\n\r\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const {tokenMode} = farmsProps;\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => { \r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(false)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid !== 8)\r\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid !== 8)\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay, removed: boolean) => {\r\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      // let userTotalTVL = new BigNumber(0);\r\n      // let userAllowance = 0;\r\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\r\n        //   return farm\r\n        // }\r\n        const cakeRewardPerBlock = new BigNumber(farm.gajPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n        // if (farm.userData) {\r\n        //   const userShare = new BigNumber(farm.userData.stakedBalance).div(1000000000000000000).multipliedBy(farm.tokenPriceVsQuote)\r\n        //   userTotalTVL = userTotalTVL.plus(userShare)\r\n        //   const userWL = Whitelist.find(add => add.wallet === account);\r\n        //   userAllowance = userWL.allowance\r\n        // }\r\n\r\n        let apy = cakePrice.times(cakeRewardPerYear);\r\n\r\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          totalValue = totalValue.times(bnbPrice);\r\n        }\r\n\r\n        if(totalValue.comparedTo(0) > 0){\r\n          apy = apy.div(totalValue);\r\n        }\r\n\r\n        return { ...farm, apy }\r\n      })\r\n      return farmsToDisplayWithAPY.map((farm) => (\r\n        <FarmCard\r\n          key={farm.pid}\r\n          farm={farm}\r\n          removed={removed}\r\n          bnbPrice={bnbPrice}\r\n          cakePrice={cakePrice}\r\n          ethereum={ethereum}\r\n          account={account}\r\n        />\r\n      ))\r\n    },\r\n    [bnbPrice, account, cakePrice, ethereum],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <iframe src=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=\" title=\"Buy Flix\" height='700px' width=\"100%\"/>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useTokenBalance.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useI18n.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/multicall.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/nfts.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/HowItWorks.tsx",["981","982"],"// @ts-nocheck\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Text as UIKitText, ArrowForwardIcon } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\n\r\nconst StyledHowItWorks = styled.div`\r\n  border-top: 1px solid ${({ theme }) => theme.colors.textSubtle};\r\n  padding: 24px 0;\r\n`\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Icon = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst Text = styled(UIKitText)`\r\n  flex: 1;\r\n  padding: 0 8px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: start;\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Container>\r\n     \r\n        <Section>\r\n          <Heading id=\"how-it-works\" color=\"secondary\" size=\"lg\" mb=\"16px\">\r\n            {TranslateString(632, 'How it works')}\r\n          </Heading>\r\n          <Row>\r\n            <Icon>\r\n              <ArrowForwardIcon />\r\n            </Icon>\r\n            <Text>\r\n              You must get a minumum of 333 333 naughty tokens to have access to the videos\r\n            </Text>\r\n          </Row>\r\n          <Row>\r\n            <Icon>\r\n              <ArrowForwardIcon />\r\n            </Icon>\r\n            <Text>\r\n              You can choose to spend your naughties to have the video immidiatly\r\n            </Text>\r\n          </Row>\r\n          <Row>\r\n            <Icon>\r\n              <ArrowForwardIcon />\r\n            </Icon>\r\n            <Text>\r\n              Or you can stake your NGTHY to receive FLIX and gain access to the NFTs\r\n            </Text>\r\n          </Row>\r\n        </Section>\r\n      \r\n       \r\n      \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftList.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftInfo.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/RegisterToWinPage.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/contexts/NftProvider.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/layout/Container.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useRefresh.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/translateTextHelpers.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/Localisation/translationsContext.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useTheme.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/web3.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/localisation/languageCodes.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/StatusCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftPreview.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftGrid.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftProgressSimple.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftProgress.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/FarmCard.tsx",["983"],"import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { Farm } from 'state/types'\r\nimport { provider } from 'web3-core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(45deg,\r\n  rgba(255, 0, 0, 1) 0%,\r\n  rgba(255, 154, 0, 1) 10%,\r\n  rgba(208, 222, 33, 1) 20%,\r\n  rgba(79, 220, 74, 1) 30%,\r\n  rgba(63, 218, 216, 1) 40%,\r\n  rgba(47, 201, 226, 1) 50%,\r\n  rgba(28, 127, 238, 1) 60%,\r\n  rgba(95, 21, 242, 1) 70%,\r\n  rgba(186, 12, 248, 1) 80%,\r\n  rgba(251, 7, 217, 1) 90%,\r\n  rgba(255, 0, 0, 1) 100%);\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 16px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: 32px;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  bnbPrice?: BigNumber\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\r\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\r\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  // const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken)\r\n    }\r\n    return farm.lpTotalInQuoteToken\r\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol\r\n  const earnLabel = 'GAJ'\r\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  })\r\n\r\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\r\n\r\n  return (\r\n    <FCard>\r\n      {farm.tokenSymbol === 'GAJ' && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        risk={risk}\r\n        depositFee={farm.depositFeeBP}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent='space-between' alignItems='center'>\r\n          <Text>{TranslateString(352, 'APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  quoteTokenAdresses={quoteTokenAdresses}\r\n                  quoteTokenSymbol={quoteTokenSymbol}\r\n                  tokenAddresses={tokenAddresses}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent='space-between'>\r\n        <Text>{TranslateString(318, 'Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <Flex justifyContent='space-between'>\r\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\r\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          isTokenOnly={farm.isTokenOnly}\r\n          bscScanAddress={\r\n            farm.isTokenOnly ?\r\n              `https://explorer-mainnet.maticvigil.com/tokens/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n              :\r\n              `https://explorer-mainnet.maticvigil.com/tokens/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\r\n          }\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          quoteTokenAdresses={quoteTokenAdresses}\r\n          quoteTokenSymbol={quoteTokenSymbol}\r\n          tokenAddresses={tokenAddresses}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/FarmCard.tsx",["984"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/TwitterCard.tsx",["985","986","987","988","989","990","991","992","993","994"],"import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { Timeline } from 'react-twitter-widgets'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms } from '../../../state/hooks'\r\n\r\nconst StyledTwitterCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst TwitterCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTwitterCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          Juicy News\r\n        </Heading>\r\n        <Timeline\r\n          dataSource={{\r\n            sourceType: 'profile',\r\n            screenName: 'Naughtyflixclub'\r\n          }}\r\n          options={{\r\n            height: '300',\r\n            chrome: \"noheader, nofooter\",\r\n            width: \"400\"\r\n          }}\r\n        />\r\n      </CardBody>\r\n    </StyledTwitterCard>\r\n  )\r\n}\r\n\r\nexport default TwitterCard\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeStats2.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeStats.tsx",["995"],"import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useNaughtyBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getNGHTYAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\nimport { useFarms, usePriceCakeBNB } from '../../../state/hooks'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getNGHTYAddress())\r\n  const farms = useFarms();\r\n  const eggPrice = usePriceCakeBNB();\r\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\r\n  const cakeSupply = getBalanceNumber(circSupply);\r\n  const marketCap = eggPrice.times(circSupply);\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          Naughty Stats\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">Total Naughty Supply</Text>\r\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} decimals={0} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(999, 'Market Cap')}</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(marketCap)} decimals={0} prefix=\"BnB\" />\r\n\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\"> Total Naughty Burned</Text>\r\n          <CardValue fontSize=\"14px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\"> New Naughty/block</Text>\r\n          <Text bold fontSize=\"14px\"> 0</Text>\r\n        </Row>\r\n      </CardBody>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/FarmStakingCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/pools/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/farms/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/contracts.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/erc20.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftInWalletCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/Image.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/PleaseWaitCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NftCard/index.tsx",["996"],"import React, { useState, useContext, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Tag,\r\n  Button,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Text,\r\n  CardFooter,\r\n  useModal,\r\n   Link, LinkExternal\r\n} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport InfoRow from '../InfoRow'\r\nimport Image from '../Image'\r\nimport { NftProviderContext } from '../../contexts/NftProvider'\r\nimport { getPancakeRabbitContract } from '../../utils/contracts'\r\nimport ClaimNftModal from '../ClaimNftModal'\r\nimport BurnNftModal from '../BurnNftModal'\r\nimport TransferNftModal from '../TransferNftModal'\r\n\r\ninterface NftCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst Header = styled(InfoRow)`\r\n  min-height: 28px;\r\n`\r\n\r\nconst DetailsButton = styled(Button).attrs({ variant: 'text', fullWidth: true })`\r\n  height: auto;\r\n  padding: 16px 24px;\r\n\r\n  &:hover:not(:disabled):not(:active) {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:focus:not(:active) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n  padding: 0 24px 24px;\r\n`\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst NftCard: React.FC<NftCardProps> = ({ nft }) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isOpen: false,\r\n    bunnyCount: 0,\r\n    bunnyBurnCount: 0,\r\n  })\r\n  const TranslateString = useI18n()\r\n  const {\r\n    isInitialized,\r\n    canClaim,\r\n    hasClaimed,\r\n    canBurnNft,\r\n    totalSupplyDistributed,\r\n    currentDistributedSupply,\r\n    getTokenIds,\r\n    reInitialize,\r\n  } = useContext(NftProviderContext)\r\n  const walletCanClaim = canClaim && !hasClaimed\r\n  const { bunnyId, name, previewImage, originalImage, description } = nft\r\n  const tokenIds = getTokenIds(bunnyId)\r\n  const isSupplyAvailable = currentDistributedSupply < totalSupplyDistributed\r\n  const walletOwnsNft = tokenIds && tokenIds.length > 0\r\n  const Icon = state.isOpen ? ChevronUpIcon : ChevronDownIcon\r\n\r\n  const fetchDetails = useCallback(async () => {\r\n    setState((prevState) => ({ ...prevState, isLoading: true }))\r\n    try {\r\n      const { methods } = getPancakeRabbitContract()\r\n      const bunnyCount = await methods.bunnyCount(bunnyId).call()\r\n      const bunnyBurnCount = await methods.bunnyBurnCount(bunnyId).call()\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: false,\r\n        isDataFetched: true,\r\n        bunnyCount: parseInt(bunnyCount, 10),\r\n        bunnyBurnCount: parseInt(bunnyBurnCount, 10),\r\n      }))\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }, [bunnyId])\r\n\r\n  const handleClick = async () => {\r\n    if (state.isOpen) {\r\n      setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n    } else {\r\n      try {\r\n        await fetchDetails()\r\n      } catch (error) {\r\n        console.error(error)\r\n      } finally {\r\n        setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSuccess = () => {\r\n    fetchDetails()\r\n    reInitialize()\r\n  }\r\n\r\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} />)\r\n  const [onPresentBurnModal] = useModal(<BurnNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />)\r\n  const [onPresentTransferModal] = useModal(\r\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\r\n  )\r\n\r\n  return (\r\n    <Card isActive={walletOwnsNft}>\r\n      <Image src={`/images/nfts/${previewImage}`} alt={name} originalLink={walletOwnsNft ? originalImage : null} />\r\n      <CardBody>\r\n        <Header>\r\n          <Heading>{name}</Heading>\r\n          {isInitialized && walletCanClaim && (\r\n            <Tag outline variant=\"success\">\r\n              {TranslateString(526, 'Available')}\r\n            </Tag>\r\n          )}\r\n          {isInitialized && tokenIds && (\r\n            <Tag outline variant=\"secondary\">\r\n              {TranslateString(999, 'In Wallet')}\r\n            </Tag>\r\n          )}\r\n        </Header>\r\n        {isInitialized && walletOwnsNft && (\r\n          <Button fullWidth variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\r\n            {TranslateString(999, 'Transfer')}\r\n          </Button>\r\n        )}\r\n        {isInitialized && !walletCanClaim && !isSupplyAvailable && (\r\n          <Button fullWidth onClick={onPresentClaimModal} mt=\"24px\">\r\n            {TranslateString(999, 'Claim this NFT')}\r\n          </Button>\r\n        )}\r\n        {isInitialized && canBurnNft && walletOwnsNft && (\r\n          <Button variant=\"danger\" fullWidth onClick={onPresentBurnModal} mt=\"24px\">\r\n            {TranslateString(999, 'Trade in for CAKE')}\r\n          </Button>\r\n        )}\r\n      </CardBody>\r\n      <CardFooter p=\"0\">\r\n        <DetailsButton endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\r\n          {state.isLoading ? TranslateString(999, 'Loading...') : TranslateString(999, 'Details')}\r\n        </DetailsButton>\r\n        {state.isOpen && (\r\n          <InfoBlock>\r\n            <Text as=\"p\" color=\"textSubtle\" mb=\"16px\" style={{ textAlign: 'center' }}>\r\n              {description}\r\n            </Text>\r\n            \r\n            <InfoRow>\r\n              <Text>{TranslateString(999, 'Number minted')}:</Text>\r\n              <Value>{state.bunnyCount + state.bunnyBurnCount}</Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n             \r\n              <StyledLinkExternal href= {`${nft.originalImage}`}\r\n         \r\n            >\r\n          Link to preview\r\n        </StyledLinkExternal>\r\n            </InfoRow>\r\n          </InfoBlock>\r\n        )}\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftCard\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/YouWonCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/InfoRow.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/CardActionsContainer.tsx",["997"],"import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if(isTokenOnly){\r\n      return getContract(ethereum as provider, tokenAddress);\r\n    }\r\n    return getContract(ethereum as provider, lpAddress);\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} depositFeeBP={depositFeeBP} />\r\n    ) : (\r\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(999, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          GAJ\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/ApyButton.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/CardHeading.tsx",["998","999","1000","1001"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag, RiskTag, NoFeeTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  risk?: number\r\n  depositFee?: number\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  risk,\r\n  farmImage,\r\n  tokenSymbol,\r\n  depositFee,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n          {depositFee === 0 ? <NoFeeTag /> : null}\r\n          {/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}\r\n          {/* <RiskTag risk={risk} /> */}\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/DetailsSection.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useAllEarnings.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/NaughtyWalletBalance.tsx",["1002","1003","1004"],"import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useNaughtyBalance from 'hooks/useNaughtyBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getNGHTYAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst NaughtyWalletBalance = ({naughtyBalance}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={naughtyBalance}  />\r\n}\r\n\r\nexport default NaughtyWalletBalance\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeWalletBalance.tsx",["1005","1006","1007"],"import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeWalletBalance = ({cakeBalance}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '36px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={cakeBalance} fontSize=\"24px\" />\r\n}\r\n\r\nexport default CakeWalletBalance\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CakeHarvestBalance.tsx",["1008","1009"],"import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useAllEarnings from 'hooks/useAllEarnings'\r\nimport CardValue from './CardValue'\r\n\r\nconst CakeHarvestBalance = ({earningsSum}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '60px' }}>\r\n        {TranslateString(298, 'Locked')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return <CardValue value={earningsSum}fontSize=\"24px\"  />\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Home/components/CardValue.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/pools/fetchPoolsUser.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/pools/fetchPools.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/farms/fetchFarmUser.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/state/farms/fetchFarms.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/utils/contracts.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/CardContent.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/TransferNftModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/BurnNftModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/ClaimNftModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useHarvest.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useFarmsWithBalance.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/SecondaryCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/HarvestAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/ApyCalculatorModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useNaughtyBalance.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/FarmCard/StakeAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/UnlockButton.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/pools.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/farms.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useApprove.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useContract.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getLiquidityUrlPathParts.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/ExpandableSectionButton/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useStake.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Tags.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/ApyButton.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/CardActionsContainer.tsx",["1010"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/CardHeading.tsx",["1011","1012","1013","1014"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/DetailsSection.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/WithdrawModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Liquidity/components/DepositModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Nft/components/NoNftsToClaimCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/callHelpers.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/compoundApyHelpers.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useUnstake.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/formatTimePeriod.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getTimePeriods.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useBlock.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/ApyCalculatorModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/StakeAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/FarmCard/HarvestAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/config/constants/ifo.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/WithdrawModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNow/components/DepositModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/TokenInput/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/ModalActions/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/TokenInput/TokenInput.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/ModalActions/ModalActions.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/NextDrawPage.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/PastDrawsPage.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Input/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Spacer/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/FarmCard.tsx",["1015"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/FarmCard.tsx",["1016"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/Hero.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/Divider.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/Divider.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/FarmCard.tsx",["1017"],"import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(45deg,\n  rgba(255, 0, 0, 1) 0%,\n  rgba(255, 154, 0, 1) 10%,\n  rgba(208, 222, 33, 1) 20%,\n  rgba(79, 220, 74, 1) 30%,\n  rgba(63, 218, 216, 1) 40%,\n  rgba(47, 201, 226, 1) 50%,\n  rgba(28, 127, 238, 1) 60%,\n  rgba(95, 21, 242, 1) 70%,\n  rgba(186, 12, 248, 1) 80%,\n  rgba(251, 7, 217, 1) 90%,\n  rgba(255, 0, 0, 1) 100%);\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  // const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n //  const farmImage = farm.isTokenOnly ? farm.tokenSymbol.toLowerCase() : `${farm.tokenSymbol.toLowerCase()}-${farm.quoteTokenSymbol.toLowerCase()}`\n  const farmImage = farm.lpSymbol.split(' ')[0].toLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = 'FLIX'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  })\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses, risk } = farm\n\n  return (\n    <FCard >\n      {farm.tokenSymbol === 'FLIX' || <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        risk={risk}\n        depositFee={farm.depositFeeBP}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent='space-between' alignItems='center'>\n          <Text>{TranslateString(352, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton\n                  lpLabel={lpLabel}\n                  quoteTokenAdresses={quoteTokenAdresses}\n                  quoteTokenSymbol={quoteTokenSymbol}\n                  tokenAddresses={tokenAddresses}\n                  cakePrice={cakePrice}\n                  apy={farm.apy}\n                />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent='space-between'>\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent='space-between'>\n        <Text style={{ fontSize: '24px' }}>{TranslateString(10001, 'Deposit Fee')}:</Text>\n        <Text bold style={{ fontSize: '24px' }}>{(farm.depositFeeBP / 100)}%</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          isTokenOnly={farm.isTokenOnly}\n          bscScanAddress={\n            farm.isTokenOnly ?\n              `https://bscscan.com/token/${farm.tokenAddresses[process.env.REACT_APP_CHAIN_ID]}`\n              :\n              `https://bscscan.com/token/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`\n          }\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          quoteTokenAdresses={quoteTokenAdresses}\n          quoteTokenSymbol={quoteTokenSymbol}\n          tokenAddresses={tokenAddresses}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useWeb3.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/lotteryUtils.js",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/UnlockWalletCard.tsx",["1018"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n        <img src=\"/images/ticket.png\" alt=\"SYRUP POOL icon\" width={48} height={48} />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/WinningNumbers.tsx",["1019","1020"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <Link href=\"https://api.pastafinance.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #e8977e 0%, #d95228 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/HowItWorks.tsx",["1021","1022"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(999, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend NGHTY to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Input/Input.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/Spacer/Spacer.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/ApyButton.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/CardHeading.tsx",["1023","1024","1025","1026"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/DetailsSection.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/CardActionsContainer.tsx",["1027"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/CardActionsContainer.tsx",["1028"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/DetailsSection.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/ApyButton.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/CardHeading.tsx",["1029","1030","1031","1032"],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/LotteryProgress.tsx",["1033","1034","1035","1036","1037","1038","1039","1040"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n        <BottomTextWrapper>\r\n          <Text fontSize=\"20px\" bold color=\"contrast\">\r\n            {TranslateString(0, 'Upcoming Draw :  5/23/2021 19:00:00 UTC')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/contexts/PastLotteryDataContext.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/layout/Flex.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmTabButtons/index.tsx",["1041"],"import React, {useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Text, Toggle } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\n\r\nconst FarmTabButtons = ({ stakedOnly, setStakedOnly}) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  const [index, setIndex] = useState(0);\r\n  \r\n  const handleClick = (newIndex) => setIndex(newIndex);\r\n  return (\r\n    <Wrapper>\r\n      <ToggleWrapper>\r\n        <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} />\r\n        <Text> {TranslateString(699, 'Staked only')}</Text>\r\n      </ToggleWrapper>\r\n      <ButtonMenu activeIndex={index} size=\"sm\" variant=\"subtle\" onClick={handleClick}>\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n        <Text>All</Text>\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/ngthy`}>\r\n        <Text>NGHTY</Text>\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/busd`}>\r\n        <Text>BUSD</Text>\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/bnb`}>\r\n        <Text>BNB</Text>\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 32px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/CardHeading.tsx",["1042","1043","1044","1045"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag, RiskTag, NoFeeTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  risk?: number\r\n  depositFee?: number\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 0.25rem;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  risk,\r\n  farmImage,\r\n  tokenSymbol,\r\n  depositFee,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {depositFee === 0 ? <NoFeeTag /> : null}\r\n          {/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}\r\n          {/* <RiskTag risk={risk} /> */}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/CardActionsContainer.tsx",["1046"],"import React, { useMemo, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { provider } from 'web3-core'\r\nimport { getContract } from 'utils/erc20'\r\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { Farm } from 'state/types'\r\nimport { useFarmFromPid, useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apy?: BigNumber\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  ethereum?: provider\r\n  account?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\r\n  const TranslateString = useI18n()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpContract = useMemo(() => {\r\n    if(isTokenOnly){\r\n      return getContract(ethereum as provider, tokenAddress);\r\n    }\r\n    return getContract(ethereum as provider, lpAddress);\r\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction stakedBalance={stakedBalance} tokenBalance={tokenBalance} tokenName={lpName} pid={pid} depositFeeBP={depositFeeBP} />\r\n    ) : (\r\n      <Button mt=\"8px\" fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n        {TranslateString(999, 'Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          FLIX\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(999, 'Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" fullWidth /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/DetailsSection.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/ApyButton.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useTickets.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/index.tsx",["1047"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n    <CardBody>\r\n      <CardHeader>\r\n        <IconWrapper>\r\n        <img src=\"/images/ticket.png\" alt=\"SYRUP POOL icon\" width={48} height={48} />\r\n        </IconWrapper>\r\n        {lotteryHasDrawn ? (\r\n          <TicketCountWrapper>\r\n            <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n          </TicketCountWrapper>\r\n        ) : (\r\n          <TicketCountWrapper>\r\n            <Text fontSize=\"14px\" color=\"textSubtle\">\r\n              {TranslateString(999, 'Your tickets for this round')}\r\n            </Text>\r\n            <Heading size=\"lg\">{ticketsLength}</Heading>\r\n          </TicketCountWrapper>\r\n        )}\r\n      </CardHeader>\r\n      <TicketActions />\r\n    </CardBody>\r\n  </StyledCard>\r\n)\r\n}\r\n\r\nexport default TicketCard\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TotalPrizesCard/index.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/YourPrizesCard/index.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/index.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastDrawsHistory/Legend.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastDrawsHistory/HistoryChart.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/helpers/CountdownHelpers.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/StakeAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/ApyCalculatorModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/FarmCard/HarvestAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/ApyCalculatorModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/HarvestAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/FarmCard/StakeAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/HarvestAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/StakeAction.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useGetLotteryHasDrawn.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useTimer.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/Loading.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/hooks/useGetRecentLotteryRoundData.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PrizeGrid.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/TicketActions.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastDrawsHistory/LineChartWrapper.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/DepositModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Teaser/components/WithdrawModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/WithdrawModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/BuyNaughty/components/DepositModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/DepositModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Farms/components/WithdrawModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/utils/getLotteryRoundData.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/UserTicketsModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/PurchaseWarningModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx",["1048","1049"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              \r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} PASTA`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/TicketCard/BuyTicketModal.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useAllowance.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/hooks/useBuyLottery.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/LotteryCardHeading.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/components/Timestamp.tsx",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/views/Lottery/helpers/formatLotteryDate.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/TicketInput/index.ts",[],"/Users/ivopascoal/Desktop/Naughty/naughty_front/src/components/TicketInput/TicketInput.tsx",[],{"ruleId":"1050","severity":1,"message":"1051","line":2,"column":35,"nodeType":"1052","messageId":"1053","endLine":2,"endColumn":43},{"ruleId":"1050","severity":1,"message":"1054","line":3,"column":23,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1055","line":3,"column":10,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":16},{"ruleId":"1050","severity":1,"message":"1056","line":3,"column":18,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1057","line":3,"column":27,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1058","line":3,"column":57,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":61},{"ruleId":"1050","severity":1,"message":"1059","line":15,"column":7,"nodeType":"1052","messageId":"1053","endLine":15,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1060","line":31,"column":9,"nodeType":"1052","messageId":"1053","endLine":31,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1061","line":2,"column":21,"nodeType":"1052","messageId":"1053","endLine":2,"endColumn":28},{"ruleId":"1050","severity":1,"message":"1062","line":5,"column":37,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":62},{"ruleId":"1050","severity":1,"message":"1060","line":22,"column":9,"nodeType":"1052","messageId":"1053","endLine":22,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1063","line":15,"column":9,"nodeType":"1052","messageId":"1053","endLine":15,"endColumn":21},{"ruleId":"1050","severity":1,"message":"1064","line":33,"column":7,"nodeType":"1052","messageId":"1053","endLine":33,"endColumn":43},{"ruleId":"1065","severity":1,"message":"1066","line":60,"column":7,"nodeType":"1067","messageId":"1068","endLine":60,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1069","line":8,"column":27,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":41},{"ruleId":"1050","severity":1,"message":"1070","line":8,"column":43,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":56},{"ruleId":"1050","severity":1,"message":"1060","line":26,"column":9,"nodeType":"1052","messageId":"1053","endLine":26,"endColumn":24},{"ruleId":"1065","severity":1,"message":"1066","line":31,"column":3,"nodeType":"1067","messageId":"1068","endLine":31,"endColumn":14},{"ruleId":"1065","severity":1,"message":"1066","line":36,"column":3,"nodeType":"1067","messageId":"1068","endLine":36,"endColumn":14},{"ruleId":"1050","severity":1,"message":"1071","line":46,"column":9,"nodeType":"1052","messageId":"1053","endLine":46,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1072","line":2,"column":10,"nodeType":"1052","messageId":"1053","endLine":2,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1073","line":7,"column":10,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1056","line":7,"column":17,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1069","line":8,"column":27,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":41},{"ruleId":"1050","severity":1,"message":"1070","line":8,"column":43,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":56},{"ruleId":"1050","severity":1,"message":"1074","line":9,"column":8,"nodeType":"1052","messageId":"1053","endLine":9,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1075","line":17,"column":8,"nodeType":"1052","messageId":"1053","endLine":17,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1076","line":18,"column":8,"nodeType":"1052","messageId":"1053","endLine":18,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1077","line":25,"column":11,"nodeType":"1052","messageId":"1053","endLine":25,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1060","line":26,"column":9,"nodeType":"1052","messageId":"1053","endLine":26,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1078","line":41,"column":10,"nodeType":"1052","messageId":"1053","endLine":41,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1079","line":41,"column":22,"nodeType":"1052","messageId":"1053","endLine":41,"endColumn":35},{"ruleId":"1050","severity":1,"message":"1071","line":44,"column":9,"nodeType":"1052","messageId":"1053","endLine":44,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1080","line":46,"column":9,"nodeType":"1052","messageId":"1053","endLine":46,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1081","line":53,"column":9,"nodeType":"1052","messageId":"1053","endLine":53,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1072","line":3,"column":10,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1073","line":8,"column":10,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1069","line":9,"column":27,"nodeType":"1052","messageId":"1053","endLine":9,"endColumn":41},{"ruleId":"1050","severity":1,"message":"1070","line":9,"column":43,"nodeType":"1052","messageId":"1053","endLine":9,"endColumn":56},{"ruleId":"1050","severity":1,"message":"1074","line":10,"column":8,"nodeType":"1052","messageId":"1053","endLine":10,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1075","line":18,"column":8,"nodeType":"1052","messageId":"1053","endLine":18,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1076","line":19,"column":8,"nodeType":"1052","messageId":"1053","endLine":19,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1077","line":26,"column":11,"nodeType":"1052","messageId":"1053","endLine":26,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1060","line":27,"column":9,"nodeType":"1052","messageId":"1053","endLine":27,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1078","line":42,"column":10,"nodeType":"1052","messageId":"1053","endLine":42,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1079","line":42,"column":22,"nodeType":"1052","messageId":"1053","endLine":42,"endColumn":35},{"ruleId":"1050","severity":1,"message":"1071","line":45,"column":9,"nodeType":"1052","messageId":"1053","endLine":45,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1080","line":47,"column":9,"nodeType":"1052","messageId":"1053","endLine":47,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1081","line":75,"column":9,"nodeType":"1052","messageId":"1053","endLine":75,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1072","line":2,"column":10,"nodeType":"1052","messageId":"1053","endLine":2,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1073","line":7,"column":10,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1056","line":7,"column":17,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1069","line":8,"column":27,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":41},{"ruleId":"1050","severity":1,"message":"1070","line":8,"column":43,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":56},{"ruleId":"1050","severity":1,"message":"1074","line":9,"column":8,"nodeType":"1052","messageId":"1053","endLine":9,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1075","line":17,"column":8,"nodeType":"1052","messageId":"1053","endLine":17,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1076","line":18,"column":8,"nodeType":"1052","messageId":"1053","endLine":18,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1077","line":25,"column":11,"nodeType":"1052","messageId":"1053","endLine":25,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1060","line":26,"column":9,"nodeType":"1052","messageId":"1053","endLine":26,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1078","line":41,"column":10,"nodeType":"1052","messageId":"1053","endLine":41,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1079","line":41,"column":22,"nodeType":"1052","messageId":"1053","endLine":41,"endColumn":35},{"ruleId":"1050","severity":1,"message":"1071","line":44,"column":9,"nodeType":"1052","messageId":"1053","endLine":44,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1080","line":46,"column":9,"nodeType":"1052","messageId":"1053","endLine":46,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1081","line":53,"column":9,"nodeType":"1052","messageId":"1053","endLine":53,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1082","line":7,"column":8,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":19},{"ruleId":"1050","severity":1,"message":"1083","line":10,"column":8,"nodeType":"1052","messageId":"1053","endLine":10,"endColumn":28},{"ruleId":"1050","severity":1,"message":"1060","line":59,"column":9,"nodeType":"1052","messageId":"1053","endLine":59,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1072","line":2,"column":10,"nodeType":"1052","messageId":"1053","endLine":2,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1073","line":7,"column":10,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1056","line":7,"column":17,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1069","line":8,"column":27,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":41},{"ruleId":"1050","severity":1,"message":"1070","line":8,"column":43,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":56},{"ruleId":"1050","severity":1,"message":"1074","line":9,"column":8,"nodeType":"1052","messageId":"1053","endLine":9,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1075","line":17,"column":8,"nodeType":"1052","messageId":"1053","endLine":17,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1076","line":18,"column":8,"nodeType":"1052","messageId":"1053","endLine":18,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1077","line":25,"column":11,"nodeType":"1052","messageId":"1053","endLine":25,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1060","line":26,"column":9,"nodeType":"1052","messageId":"1053","endLine":26,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1078","line":41,"column":10,"nodeType":"1052","messageId":"1053","endLine":41,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1079","line":41,"column":22,"nodeType":"1052","messageId":"1053","endLine":41,"endColumn":35},{"ruleId":"1050","severity":1,"message":"1071","line":44,"column":9,"nodeType":"1052","messageId":"1053","endLine":44,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1080","line":46,"column":9,"nodeType":"1052","messageId":"1053","endLine":46,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1081","line":53,"column":9,"nodeType":"1052","messageId":"1053","endLine":53,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1055","line":4,"column":10,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":16},{"ruleId":"1050","severity":1,"message":"1084","line":8,"column":7,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1085","line":5,"column":10,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1085","line":5,"column":10,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1057","line":2,"column":35,"nodeType":"1052","messageId":"1053","endLine":2,"endColumn":39},{"ruleId":"1050","severity":1,"message":"1086","line":3,"column":8,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":17},{"ruleId":"1050","severity":1,"message":"1087","line":6,"column":10,"nodeType":"1052","messageId":"1053","endLine":6,"endColumn":26},{"ruleId":"1050","severity":1,"message":"1088","line":7,"column":10,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1089","line":7,"column":26,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":42},{"ruleId":"1050","severity":1,"message":"1090","line":9,"column":10,"nodeType":"1052","messageId":"1053","endLine":9,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1091","line":10,"column":8,"nodeType":"1052","messageId":"1053","endLine":10,"endColumn":17},{"ruleId":"1050","severity":1,"message":"1092","line":11,"column":10,"nodeType":"1052","messageId":"1053","endLine":11,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1093","line":18,"column":7,"nodeType":"1052","messageId":"1053","endLine":18,"endColumn":10},{"ruleId":"1050","severity":1,"message":"1060","line":27,"column":9,"nodeType":"1052","messageId":"1053","endLine":27,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1094","line":29,"column":9,"nodeType":"1052","messageId":"1053","endLine":29,"endColumn":14},{"ruleId":"1050","severity":1,"message":"1058","line":14,"column":4,"nodeType":"1052","messageId":"1053","endLine":14,"endColumn":8},{"ruleId":"1050","severity":1,"message":"1095","line":8,"column":26,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":43},{"ruleId":"1050","severity":1,"message":"1096","line":4,"column":10,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1097","line":4,"column":24,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1098","line":4,"column":33,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":40},{"ruleId":"1050","severity":1,"message":"1099","line":28,"column":3,"nodeType":"1052","messageId":"1053","endLine":28,"endColumn":7},{"ruleId":"1050","severity":1,"message":"1100","line":4,"column":8,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1101","line":6,"column":10,"nodeType":"1052","messageId":"1053","endLine":6,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1087","line":7,"column":10,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":26},{"ruleId":"1050","severity":1,"message":"1102","line":4,"column":8,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1090","line":6,"column":10,"nodeType":"1052","messageId":"1053","endLine":6,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1087","line":7,"column":10,"nodeType":"1052","messageId":"1053","endLine":7,"endColumn":26},{"ruleId":"1050","severity":1,"message":"1086","line":4,"column":8,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":17},{"ruleId":"1050","severity":1,"message":"1103","line":6,"column":8,"nodeType":"1052","messageId":"1053","endLine":6,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1095","line":8,"column":26,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":43},{"ruleId":"1050","severity":1,"message":"1096","line":4,"column":10,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1097","line":4,"column":24,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1098","line":4,"column":33,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":40},{"ruleId":"1050","severity":1,"message":"1099","line":28,"column":3,"nodeType":"1052","messageId":"1053","endLine":28,"endColumn":7},{"ruleId":"1050","severity":1,"message":"1085","line":5,"column":10,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1085","line":5,"column":10,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1085","line":5,"column":10,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1104","line":3,"column":35,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":41},{"ruleId":"1050","severity":1,"message":"1105","line":103,"column":7,"nodeType":"1052","messageId":"1053","endLine":103,"endColumn":16},{"ruleId":"1050","severity":1,"message":"1106","line":181,"column":7,"nodeType":"1052","messageId":"1053","endLine":181,"endColumn":16},{"ruleId":"1050","severity":1,"message":"1107","line":17,"column":7,"nodeType":"1052","messageId":"1053","endLine":17,"endColumn":18},{"ruleId":"1050","severity":1,"message":"1108","line":21,"column":7,"nodeType":"1052","messageId":"1053","endLine":21,"endColumn":17},{"ruleId":"1050","severity":1,"message":"1096","line":4,"column":10,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1097","line":4,"column":24,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1098","line":4,"column":33,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":40},{"ruleId":"1050","severity":1,"message":"1099","line":28,"column":3,"nodeType":"1052","messageId":"1053","endLine":28,"endColumn":7},{"ruleId":"1050","severity":1,"message":"1095","line":8,"column":26,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":43},{"ruleId":"1050","severity":1,"message":"1095","line":8,"column":26,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":43},{"ruleId":"1050","severity":1,"message":"1096","line":4,"column":10,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1097","line":4,"column":24,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1098","line":4,"column":33,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":40},{"ruleId":"1050","severity":1,"message":"1099","line":28,"column":3,"nodeType":"1052","messageId":"1053","endLine":28,"endColumn":7},{"ruleId":"1050","severity":1,"message":"1109","line":3,"column":16,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1110","line":9,"column":3,"nodeType":"1052","messageId":"1053","endLine":9,"endColumn":21},{"ruleId":"1050","severity":1,"message":"1111","line":11,"column":3,"nodeType":"1052","messageId":"1053","endLine":11,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1112","line":19,"column":7,"nodeType":"1052","messageId":"1053","endLine":19,"endColumn":21},{"ruleId":"1050","severity":1,"message":"1113","line":34,"column":7,"nodeType":"1052","messageId":"1053","endLine":34,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1114","line":39,"column":9,"nodeType":"1052","messageId":"1053","endLine":39,"endColumn":24},{"ruleId":"1050","severity":1,"message":"1115","line":41,"column":9,"nodeType":"1052","messageId":"1053","endLine":41,"endColumn":28},{"ruleId":"1050","severity":1,"message":"1116","line":42,"column":9,"nodeType":"1052","messageId":"1053","endLine":42,"endColumn":29},{"ruleId":"1050","severity":1,"message":"1117","line":9,"column":16,"nodeType":"1052","messageId":"1053","endLine":9,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1096","line":4,"column":10,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1097","line":4,"column":24,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1098","line":4,"column":33,"nodeType":"1052","messageId":"1053","endLine":4,"endColumn":40},{"ruleId":"1050","severity":1,"message":"1099","line":28,"column":3,"nodeType":"1052","messageId":"1053","endLine":28,"endColumn":7},{"ruleId":"1050","severity":1,"message":"1095","line":8,"column":26,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":43},{"ruleId":"1050","severity":1,"message":"1118","line":3,"column":26,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":37},{"ruleId":"1050","severity":1,"message":"1118","line":3,"column":59,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":70},{"ruleId":"1050","severity":1,"message":"1104","line":3,"column":72,"nodeType":"1052","messageId":"1053","endLine":3,"endColumn":78},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ResetCSS' is defined but never used.","'Button' is defined but never used.","'Heading' is defined but never used.","'Text' is defined but never used.","'Link' is defined but never used.","'StyledLinkExternal' is assigned a value but never used.","'TranslateString' is assigned a value but never used.","'useMemo' is defined but never used.","'fetchPoolsPublicDataAsync' is defined but never used.","'cakePriceBNB' is assigned a value but never used.","'fetchTranslationsForSelectedLanguage' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'CAKE_PER_BLOCK' is defined but never used.","'CAKE_POOL_PID' is defined but never used.","'inactiveFarms' is assigned a value but never used.","'Route' is defined but never used.","'Image' is defined but never used.","'FlexLayout' is defined but never used.","'FarmTabButtons' is defined but never used.","'Divider' is defined but never used.","'path' is assigned a value but never used.","'stakedOnly' is assigned a value but never used.","'setStakedOnly' is assigned a value but never used.","'stakedOnlyFarms' is assigned a value but never used.","'farmsList' is assigned a value but never used.","'LotteryCard' is defined but never used.","'TotalValueLockedCard' is defined but never used.","'StyledHowItWorks' is assigned a value but never used.","'communityFarms' is defined but never used.","'BigNumber' is defined but never used.","'getBalanceNumber' is defined but never used.","'useTotalSupply' is defined but never used.","'useBurnedBalance' is defined but never used.","'getCakeAddress' is defined but never used.","'CardValue' is defined but never used.","'useFarms' is defined but never used.","'Row' is assigned a value but never used.","'farms' is assigned a value but never used.","'useFarmFromSymbol' is defined but never used.","'CommunityTag' is defined but never used.","'CoreTag' is defined but never used.","'RiskTag' is defined but never used.","'risk' is defined but never used.","'useNaughtyBalance' is defined but never used.","'getNGHTYAddress' is defined but never used.","'useTokenBalance' is defined but never used.","'useAllEarnings' is defined but never used.","'Ticket' is defined but never used.","'RabbitRow' is assigned a value but never used.","'RabbitBox' is assigned a value but never used.","'StyledImage' is assigned a value but never used.","'StyledLink' is assigned a value but never used.","'Progress' is defined but never used.","'getLotteryDrawStep' is defined but never used.","'getTicketSaleStep' is defined but never used.","'TopTextWrapper' is assigned a value but never used.","'StyledPrimaryText' is assigned a value but never used.","'lotteryHasDrawn' is assigned a value but never used.","'timeUntilTicketSale' is assigned a value but never used.","'timeUntilLotteryDraw' is assigned a value but never used.","'isExact' is assigned a value but never used.","'TicketRound' is defined but never used."]