{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/callHelpers.ts","hooks/useTokenBalance.ts","hooks/useApprove.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getTimePeriods.ts","components/Input/Input.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","getContract","cakeABI","getCakeAddress","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","getTokenBalance","res","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useLotteryApprove","useCake","lotteryContract","useLottery","Wrapper","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","StyledInputWrapper","input","radii","default","StyledInput","Input","endAdornment","onChange","placeholder","startAdornment","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","ProgressWrapper","BottomTextWrapper","LotteryProgress","Text","TranslateString","useI18n","msUntilLotteryDraw","getLotteryDrawTime","fontSize","Title","Heading","attrs","as","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","style","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","width","height","UnlockButton","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onSelectMax","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","e","currentTarget","Tips","Announce","Final","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","useLotteryAllowance","cakeBalance","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","toNumber","isSecondCard","CardHeader","TicketCountWrapper","timeUntilTicketSale","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","fontWeight","Link","Row","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/11.d2f0cd0b.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x383283D40aEECa9fAE817B7C0E8F2d5277777828') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0x383283D40aEECa9fAE817B7C0E8F2d5277777828') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (ticketIssue.toString() === issueIdex) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIdex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIdex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\r\n    return amount / 1e18 / 10\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [20]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 20 && currentHour >= 20 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n        <BottomTextWrapper>\r\n          <Text fontSize=\"20px\" bold color=\"contrast\">\r\n            {TranslateString(0, 'Upcoming Draw :  5/23/2021 19:00:00 UTC')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #e8977e 0%, #d95228 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title style={{color:\"black\"}}>{TranslateString(999, 'The Naughty Lottery')}</Title>\r\n          <Blurb>{TranslateString(999, 'Buy tickets with Naughty')}</Blurb>\r\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(999, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              PASTA\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(999, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n        <img src=\"/images/ticket.png\" alt=\"SYRUP POOL icon\" width={48} height={48} />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy('10', numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > 50) {\r\n      setVal('50')\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * 10\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"CAKE\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 CAKE')}</Tips>\r\n        <Tips>{TranslateString(458, '1 Ticket = 10 CAKE')}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} PASTA`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          fullWidth\r\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your PASTA will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button fullWidth onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport { useLotteryApprove } from 'hooks/useApprove'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const { onApprove } = useLotteryApprove()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button fullWidth disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(999, 'Approve PASTA')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          fullWidth\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n    <CardBody>\r\n      <CardHeader>\r\n        <IconWrapper>\r\n        <img src=\"/images/ticket.png\" alt=\"SYRUP POOL icon\" width={48} height={48} />\r\n        </IconWrapper>\r\n        {lotteryHasDrawn ? (\r\n          <TicketCountWrapper>\r\n            <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n          </TicketCountWrapper>\r\n        ) : (\r\n          <TicketCountWrapper>\r\n            <Text fontSize=\"14px\" color=\"textSubtle\">\r\n              {TranslateString(999, 'Your tickets for this round')}\r\n            </Text>\r\n            <Heading size=\"lg\">{ticketsLength}</Heading>\r\n          </TicketCountWrapper>\r\n        )}\r\n      </CardHeader>\r\n      <TicketActions />\r\n    </CardBody>\r\n  </StyledCard>\r\n)\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(999, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem marginBottom=\"20px\">\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem marginBottom=\"20px\">\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem marginBottom=\"20px\">\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} PASTA</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <Link href=\"https://api.pastafinance.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #e8977e 0%, #d95228 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(999, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend NGHTY to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pastafinance.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(999, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\r\n          {TranslateString(999, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              \r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} PASTA`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(999, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.pastafinance.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}